/*
        Maintained by *Edwards

        2009-10-10
*/
use uo;
use os;

include "include/facings";
include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":brainAI:npcWatchList";

program BrainNerve( params )

	var npc		:= params[1];
	//var nerve_name	:= params[2];
	var event	:= params[3];
	var settings	:= params[4];
	var scripts	:= params[5];
	params := 0; // Not needed anymore.

	while( npc )
		if( event )
			case( event.type )
				SYSEVENT_ENTEREDAREA:
					EnteredArea( npc, event, settings, scripts );
					break;
				default:
					break;
			endcase

			event := 0;
		endif

		SleepMS(5);
		event := Wait_For_Event(1);
	endwhile

        return 1;
endprogram

function EnteredArea( npc, byref event, byref settings, byref scripts )

	var source := event.source;

	if( NPC_ShouldWatch( npc, source, settings, scripts ))
		if( NPC_AddToWatchList( npc, source ))
			AI_WakeUp( npc );
                        GreetCustomer( npc, source );
			return 1;
		endif
	endif

	return 0;
endfunction

function GreetCustomer( npc, source )

        var next_spam := CInt( GetObjProperty( npc, "#DelaySpam" ));
        if( next_spam > ReadGameClock() )
                return 0;
        else
                SetObjProperty( npc, "#DelaySpam", ReadGameClock() + 30 );
        endif

	TurnObjectToward( npc, source.x, source.y );
 
        var speech := array{ "Welcome to my shop!",
                             "Let me know if you need help!",
                             "Let me show what I just got in!",
                             "I bet I have something you want!",
                             "Exotic merchandise from all over Britannia!",
                             "Have anything you want to get rid of?" };

        var text := speech.RandomEntry();
        
        AI_Speak( npc, text );
        
        return 1;
endfunction
