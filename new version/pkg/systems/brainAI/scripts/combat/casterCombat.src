/*
        Created by *Edwards

        2010-11-08
*/
use uo;
use os;

include "include/facings";
include ":attributes:attributes";
include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":brainAI:commonFunctions";
include ":damage:damage";
include ":spells:spells_ex";
include ":weapons:weaponInfo";

var pathfind_ticker := 0;

program BrainNerve( params )

	var npc		:= params[1];
	var nerve_name	:= params[2];
	var event	:= params[3];
	var bsettings	:= params[4];
	var scripts	:= params[5];

	NPC_SetuptCombat( npc );

	var opponent := event.source;
	AI_SetOpponent( npc, opponent );

	var min_range, max_range;
	NPC_WeaponRanges( npc, min_range, max_range );
 
	Cast_SpellReflection( npc, bsettings );

	while( npc )
		var dist := Distance( npc, opponent );
		if( DoneFighting( npc, opponent, dist, bsettings ))
			if( scripts.Exists( "EndFight" ))
				AI_StartNerve( npc, "EndFight", scripts["EndFight"].script, params );
			else
				AI_WarMode( npc, 0 );
			endif
			AI_EndNerve( npc, nerve_name );
                        break;
                elseif( ShouldFlee( npc, opponent, bsettings ))
			AI_WarMode( npc, 0 );
			AI_Move( npc, opponent.x, opponent.y, opponent.z, NEMOVE_AWAY, NEMOVE_RUN, 20 );
		elseif( !IsFacing( npc, opponent.x, opponent.y ))
			npc.facing := GetFacing( npc.x, npc.y, opponent.x, opponent.y );
                endif
                
                if( !CheckLineOfSight( npc, opponent ) || AP_GetVital( npc, MANA ) < 30 )
			if( dist < min_range )
				AI_Move( npc, opponent.x, opponent.y, opponent.z, NEMOVE_AWAY, NEMOVE_RUN, ( bsettings["MinRange"]-dist ));
			elseif( dist > max_range )
				AI_Move( npc, opponent.x, opponent.y, opponent.z, NEMOVE_TOWARD, NEMOVE_RUN, ( dist-bsettings["MaxRange"] ));
			endif
		else
			SpellAttack( npc, opponent, bsettings, dist );
		endif
  
		SleepMS(50);
		AI_ClearThoughts( npc, CLR_NERVE );
	endwhile

        return 1;
endprogram

function SpellAttack( npc, opponent, byref nsettings, byref dist )

	if( GetObjProperty( npc, "#Casting" ))
		return 0;
	elseif( CInt( GetObjProperty( npc, "#NextCast" )) > ReadGameClock() )
		return 0;
	elseif( AP_GetVital( npc, MANA ) <= 10 )
		return 0;
	elseif( !CheckLineOfSight( npc, opponent ))
		return 0;
	elseif( dist > nsettings["MaxRange"] )
		return 0;
	endif

	var npc_elem := NPC_GetNPCConfig( npc.npctemplate ),
	    spell_list := GetConfigStringArray( npc_elem, "Spell" ),
	    cast_spell := SplitWords( spell_list.RandomEntry() ),
            spell_id := SPELL_SpellNameToId( cast_spell[1] );

	if( !spell_id )
		return 0;
	elseif( RandomInt(100) >= CInt( cast_spell[2] ))
		return 0;
	endif

	var script := Start_Script( ":magery:spellStarter", array{npc, spell_id, 0, opponent, !nsettings["SpellWords"]});
	if( script.errortext )
		PrintTextAbove( npc, script.errortext );
		return 0;
	endif

	SetObjProperty( npc, "#NextCast", ReadGameClock()+nsettings["CastWait"] );

	return 1;
endfunction

function Cast_SpellReflection( npc, byref nsettings )

	var script := Start_Script( ":magery:spellStarter", array{npc, 36, 0} );
	if( script.errortext )
		PrintTextAbove( npc, script.errortext );
		return 0;
	endif

	SetObjProperty( npc, "#NextCast", ReadGameClock()+nsettings["CastWait"] );
 
	return 1;
endfunction
