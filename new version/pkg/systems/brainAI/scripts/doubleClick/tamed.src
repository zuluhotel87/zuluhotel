/*
        Maintened by *Edwards
        
        2009-02-21

        Last Modifications 2009-12-21
             * Added check if player hidden or NPC to return 0
*/
use uo;
use os;
use cfgfile;

include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":brainAI:npcInit";
include "include/client";
include ":mounts:mounts";
include ":totem:totem";

program BrainNerve( params )

	var npc		:= params[1];
	//var nerve_name:= params[2];
	var event	:= params[3];
	//var settings	:= params[4];
	//var scripts	:= params[5];
	params := 0; // Not needed anymore.

	while( npc )
		if( event )
			case( event.type )
				SYSEVENT_DOUBLECLICKED:
                                        if( npc.master && event.source == npc.master )
					        DblClickEvent( npc, event );
                                        endif
					break;
				default:
					break;
			endcase

			event := 0;
		endif

		SleepMS(5);
		event := Wait_For_Event(1);
	endwhile

        return 1;
endprogram

function DblClickEvent( npc, byref event )

        var source := event.source;
        if( source.hidden )
		return 0;
        elseif( source.frozen || source.paralyzed )
		return 0;
        elseif( source.IsA( POLCLASS_NPC ))
		return 0;
        elseif( Distance( source, npc ) > 1 )
		return 0;
        elseif( GetObjProperty( npc, "SummonedBy" ))
		SendSysMessage( source, "You canmot use magically binded creatures!" );
		return 0;
	endif

        if( IsTotem( npc ))
                Totem_Shrink( source );
                return 1;
        elseif( npc.graphic == 291 || npc.graphic == 292)
                var backpack := NPC_SetupBackPack( npc );
                SendViewContainer( source, backpack );
                return 1;
        endif
 
        var mount_elem := MP_GetMountsCfgElem( "MobileToMount" ),
            mount_settings := ListConfigElemProps( mount_elem ),
            mount_graphic := Hex( npc.graphic );
        
        if( mount_graphic in mount_settings )
		MoveObjectToLocation( source, npc.x, npc.y, npc.z, npc.realm );
                MP_Mount( source, npc );
                return 1;
        endif

	return 0;
endfunction
