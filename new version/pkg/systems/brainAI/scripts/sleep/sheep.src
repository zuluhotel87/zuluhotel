/*
        Maintained by *Edwards

        2008-05-22

        Last Modifications 2009-10-12
             * Cleaned codes for better performances

        Last Modifications 2009-11-08
             * Added refresh vitals here.

        Last Modifications 2009-12-21
             * Removed npc facing because wandering now support that
*/
use uo;
use os;
use util;
use npc;

include ":attributes:attributes";
include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":brainAI:npcEffects";

program BrainNerve( params )

	var npc		:= params[1];
	var nerve_name	:= params[2];
	//var settings	:= params[3];
	//var scripts	:= params[4];
	params := 0; // Not needed anymore.

	// Shut down appropriate nerves.
	foreach nerve in ( LoadNerves( npc ))
		if( nerve.flags & NF_CONTINUE_ON_SLEEP )
			continue;
		elseif( _nerve_iter != nerve_name )
			StopNerve( npc, _nerve_iter );
		endif
		SleepMS(2);
	endforeach
 
        AP_RefreshVitals( npc );

	while( npc )
		if( npc.graphic != 0xcf && npc.graphic != 0xcf ) // Detect the sheep has no wool.
			var regen := CInt( GetObjproperty( npc, "#RegrowWool" ));
			if( !regen )
				// Sheep can regrow wool after 5 minutes has passed.
				SetObjProperty( npc, "#RegrowWool", ReadGameClock()+300 );
			elseif( regen < ReadGameClock() )
				// Timer has passed, give the sheep wool again.
				npc.graphic := 207;
				EraseObjProperty( npc, "#RegrowWool" );
				SetObjProperty( npc, "#Wool", RandomInt(20)+1 );
			endif
		endif

		Sleep( RandomInt(5)+1 );

                var hiding := AP_GetSkill( npc, HIDING );
                if( hiding && !npc.hidden )
                        npc.hidden := 1;
                elseif( !npc.hidden && !npc.paralyzed && !GetObjProperty( npc, "Stay" ))
			AI_Wander( npc, NOWAKE );
                endif

		AI_ClearThoughts( npc, CLR_NERVE );
	endwhile

        return 1;
endprogram
