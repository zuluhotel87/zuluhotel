/*
        Created by *Edwards

        2008-12-28
*/
use uo;
use os;
use cfgfile;
use util;

include "include/packets";
include ":datafile:datafile";
include ":gumps:gumpprompt";
include ":timeutils:time";
include ":timeutils:gameTime";
include "include/shardInfo";

var g_datafile := DFOpenDataFile( ":vote:vote", DF_CREATE );

program command_vote( mobile )

        foreach acct_name in ( ListAccounts() )
                var data_elem := DFFindElement( g_datafile, acct_name );
                if( data_elem.GetProp( "LastVoteIP" ) == mobile.ip )
                       var nextVote := data_elem.GetProp( "NextVotesCore" );
                       if( nextVote > ReadGameClock() )
				SendSysMessage( mobile, "You already voted today!" );
				return 0;
                       endif
                endif

		SleepMS(5);
	endforeach
        
        SetVoteInfo( mobile );
        SendVotePrompt( mobile );

        OpenBrowser( mobile, SHARD_MAINVOTE );

        BonusCheck( mobile );
        
        return 1;
endprogram

function SendVotePrompt( mobile )

	var gump := GFCreateGump();

	GFClosable( gump, 0 );
	GFMovable( gump, 0 );

	GFResizePic( gump, 180, 60, GFGetCfgConst( "Defaults", "BackGround" ), 300, 340 );
	GFResizePic( gump, 195, 75, GFGetCfgConst( "Defaults", "ForeGround" ), 270, 310 );

        var text := "If we can keep this up, we will have a thriving server with more interaction and fun.
                    This is how important the role of voting for us is, and the direct impact it has on our
                    growth. These new players are all a result of your voting, advertising and word of mouth.
                    This is why it is necessary for each and every one of you to vote every day!
                    With the goal of standing a leading massively multiplayer Ultima Online free shard.";
                    
	var y_pos := 85;
	foreach line in ( GFWordWrap( text, 270 ))
		GFTextLine( gump, 220, y_pos, 1153, line );
		y_pos += 20;
		SleepMS(2);
	endforeach

	GFAddButton( gump, 300, 350, 2128, 2129, GF_CLOSE_BTN, 1 );

	GFSendGump( mobile, gump );

	return 1;
endfunction

function SetVoteInfo( mobile )

        var data_elem := DFFindElement( g_datafile, mobile.acctname, DF_CREATE ),
            this_month_string := CStr( "total_"+TIME_GetCurrentMonth()+"_votes" ),
            cfg_file := ReadConfigFile( ":vote:settings" );

        var delay_vote := CInt( cfg_file["Settings"].Delay );
	if( !delay_vote )
		delay_vote := 30;
	endif

        var total_votes := data_elem.GetProp( "TotalVotes" );
        if( !total_votes )
                  total_votes := 0;
        endif

        var votes := data_elem.GetProp( this_month_string );
        if( !votes )
                  votes := 0;
        endif

        var globalVotes := GetGlobalProperty( this_month_string );
        if( !globalVotes )
                  globalVotes := 0;
        endif

        var time := StrFormatTime( "%m-%d-%Y %I:%M:%S %p", CInt( POLCore().systime ));
        data_elem.SetProp( "LastVoteTime", time );
        data_elem.SetProp( "LastVoteIP", mobile.ip );
        data_elem.SetProp( "NextVotesCore", ReadGameClock() + ( SEC_HOUR * delay_vote ));
        data_elem.SetProp( "TotalVotes", total_votes + 1 );
        data_elem.SetProp( this_month_string, votes + 1 );
        
        SetGlobalProperty( this_month_string, globalVotes + 1 );

        return 1;
endfunction

function BonusCheck( who )

        var effect := RandomInt(100);
        if( effect < 30 )
               CreateItemInBackpack( who, 0xeed, RandomDiceRoll( "3d10000+1000" ));
               return 1;
        endif

        return 0;
endfunction
