/*
        Created by *Edwards

        2008-04-13
        
        Last Modifications 2010-08-01
        
        It is so easy to see disfunction between you and me, we must free up and tie this up...
        i try and try to let you know
        
*/
use uo;
use os;
use cfgfile;

include "include/security";
include "include/yesNo";
include ":areas:areas";
include ":areas:areasConstants";
include ":gumps:gumps";
include ":gumps:gumps_ex";

program command_areasManager( mobile )

        if( !AuthorizationCode( mobile ))
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        endif

        if( GetProcess( CInt( GetGlobalProperty( "#AreasManagerPid" ))))
		SendSysMessage( mobile, "The Areas-Manager is already used by someone else." );
		return 0;
	else
		SetGlobalProperty( "#AreasManagerPid", GetPid() );
	endif

        while( Send_Command( mobile ))
                SleepMS(10);
        endwhile
        
        return 1;
endprogram

function Send_Command( mobile )

        //Initialize the gump
        var gump := GFCreateGump();
        GFClosable( gump, 0 );

        //Load Main Background
	GFResizePic( gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 250, 425 );

        GFResizePic( gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 25 );
	GFTextMid( gump, 15, 17, 220, 1720, "FS Areas Manager" );

	GFResizePic( gump, 15, 45, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 370 );
        GFTextMid( gump, 15, 60, 220, 1720, "Main Menu" );

        //Okay Button
        GFAddButton( gump, 110, 370, 1148, 1149, GF_CLOSE_BTN, 0xA00 );
        
        var areas_list := { AREAS_NO_DAMAGE, AREAS_DANGEROUS, AREAS_NO_GAINS, AREAS_NO_GATE,
                           AREAS_GUARDED, AREAS_NO_LITTERING, AREAS_NO_LOOTING, AREAS_NO_MARK, AREAS_NO_RECALL,
                           AREAS_NO_STEALING },
                           
	    num := areas_list.Size(),
	    counter := 0,
	    y_pos := 100;

	GFPage( gump, 1 );
	foreach area in ( areas_list )

		GFTextLine( gump, 30, y_pos, 2100, area );
		GFAddButton( gump, 200, y_pos+3, 2117, 2118, GF_CLOSE_BTN, _area_iter );

		y_pos += 20;
		counter += 1;

		if( counter >= 13 && _area_iter < num )
			GFAddButton( gump, 283, 385, 0xA92, 0xA93, GF_PAGE_BTN, gump.cur_page+1 );
			GFPage( gump, gump.cur_page+1 );
			GFAddButton( gump, 283, 40, 0xA90, 0xA91, GF_PAGE_BTN, gump.cur_page-1 );
			counter := 0;
			y_pos := 100;
		endif
		SleepMS(2);
	endforeach

        //And now we need to know the answer...
        var input := GFSendGump( mobile, gump );
        if( !input )
                 SendSysMessage( mobile, "Cancelled." );
                 return 0;
        elseif( input[0xA00] )
                 return 0;
        endif
        
        input := input[0];
        
        var option := areas_list[input];
        Send_Areas( mobile, option );

        return 1;
endfunction

function Send_Areas( mobile, option )

        var global_prop := GetGlobalProperty( "Areas_"+option );
	if( !global_prop )
		global_prop := struct;
	endif

        //Initialize the gump
        var gump := GFCreateGump();
        GFClosable( gump, 0);

        //Load Main Background
	GFResizePic( gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 250, 425 );

        GFResizePic( gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 25 );
	GFTextMid( gump, 15, 17, 220, 1720, "FS Areas Manager" );

	GFResizePic( gump, 15, 45, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 370 );
        GFTextMid( gump, 15, 60, 220, 1720, "Areas Selection" );

        //Okay & Back Button
        GFAddButton( gump, 28, 382, 4014, 4015, GF_CLOSE_BTN, 0xA00 );
        GFTextLine( gump, 60, 382, 1153, "Back" );
        
        if( mobile.cmdlevel >= 3 )
               GFAddButton(gump, 195, 382, 4012, 4013, GF_CLOSE_BTN, 0xA01 );
               GFTextLine( gump, 155, 382, 1153, "Save" );
        endif

        //Display the areas
        GFPage( gump, 1 );

	var areas := ListAreasByType(),
	    num_areas := areas.Size(),
	    y_pos := 90;
 
	foreach entry in ( areas )

		GFTextLine( gump, 45, y_pos, 1153, entry );
                GFCheckBox( gump, 200, y_pos+5, 210, 211, CInt( global_prop[entry] ), _entry_iter );

		y_pos := y_pos+20;

		if( _entry_iter % 14 == 0 && _entry_iter < num_areas )
			GFAddButton( gump, 30, 348, 0xA92, 0xA93, GF_PAGE_BTN, gump.cur_page+1 );
			GFPage( gump,  gump.cur_page+1 );
			GFAddButton( gump, 30, 95, 0xA90, 0xA91, GF_PAGE_BTN, gump.cur_page-1 );
			y_pos := 90;
		endif

		SleepMS(2);
	endforeach

        //Manage the entries
        var input := GFSendGump( mobile, gump );
        if( !input )
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        elseif( input[0xA00] )
                return 0;
        elseif( !input[0xA01] )
                return 0;
        endif

        var new_props := dictionary;
        
        var i;
        for( i:=1; i<=num_areas; i+=1 )
                if( input[i] )
                        new_props.Insert( areas[i], 1 );
                else
                        new_props.Insert( areas[i], 0 );
                endif
                SleepMS(5);
        endfor
        
        SetGlobalProperty( "Areas_"+option, new_props );
	SendSysMessage( mobile, "Data saved" );
 
	return 1;
endfunction
