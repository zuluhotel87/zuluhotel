/*
        Maintened by *Edwards
        
        2008-12-12
        
        Last Modifications 2008-12-12
             * Now the player must accept being resurected.
             
        Last Modifications 2008-12-14
             * Command bar will close automatically

        Last Modifications 2009-10-17
             * Cleaned codes for better performances

        Last Modifications 2010-03-12
             * Cleaned codes for better performances
             * Added kludge for unequip items on Death
*/
use uo;
use os;
use util;

include "include/security";
include ":areas:managment";
include ":attributes:attributes";
include ":blood:blood";
include ":death:death";
include ":death:reportMurder";
include ":equipment:unequip";
include ":fixGate:fixGate";
include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":mounts:mounts";
include ":reputation:reputation";
include ":timedscripts:timedScripts";

program core_chrDeath( params )

	var corpse := params[1];
	var ghost := params[2];
 
        ghost.paralyzed := 0;
        ghost.graphic := 402 + ghost.gender;
        
        corpse.SetOwner( ghost );

        DP_PlayDeathSound( ghost );
        MP_DeathUnmount( corpse );
	TS_Death( ghost );
        TS_LowerDuration( ghost, "DefaultPoison", -1 );
        
        //Close commandBar
        var cmdbar := GetObjProperty( ghost, "#CmdBarPid" );
        if( cmdbar )
               GFCloseGump( ghost, cmdbar, 0x01A );
        endif
        
        if( ghost.reportables.Size() )
		SendReportGump( ghost );
        endif
        
        UnequipAllItems( ghost, corpse );
        
        // Anti looting bug fix for bags.
	foreach item in EnumerateItemsInContainer( corpse )
	        if( item.IsA( POLCLASS_CONTAINER ))
	   	        if( item.container == corpse )
			        if( item.usescript )
				       SetObjProperty( item, "old_us", item.usescript );
			        endif
			        item.usescript := ":containers:noView";
		        endif
	        endif
                SleepMS(5);
	endforeach
 
	if( A_IsIn( corpse, AREAS_NO_DAMAGE ))
                corpse.candecay := 0;
        endif

        var reputation := Start_Script( ":reputation:adviseAttacker", corpse );
	if( reputation.errortext )
		PrintTextAbove( corpse, "Error::Death Script -"+reputation.errortext);
        endif
        
        if( CheckForAutoRes( ghost, corpse ))
                DestroyItem( corpse );
                return 1;
        endif
        
        PlayMusic( ghost, "2A" );
        
        Award_Reputation( ghost, FAME, FAME_LOST_ON_DEATH );

	return 1;
endprogram

function UnequipAllItems( ghost, corpse )

	foreach item in EnumerateItemsInContainer( corpse )
                if( GetObjProperty( item, "EquippedOn" ) == ghost.serial )
			UnEquipEffect( ghost, item );
                endif
		SleepMS(5);
	endforeach
 
        FixCharacterMods( ghost );
 
        //Look for items not equipped in corpse..
	foreach item in EnumerateItemsInContainer( corpse )
		if( GetObjProperty( item, "Cursed" ) == 2 )
			EquipItem( ghost, item );
		endif
		SleepMS(5);
	endforeach

        //Look for newbie items. Staff robes, dontaors shroud, ...
	foreach item in EnumerateItemsInContainer( ghost.backpack )
		if( GetObjProperty( item, "Cursed" ) == 2 )
			EquipItem( ghost, item );
		endif
		SleepMS(5);
	endforeach

	return 1;
endfunction

function CheckForAutoRes( ghost, corpse )

	var auto_res := CInt( GetObjProperty( ghost, "AutoRes" ));
	if( auto_res )
		if( !ghost.backpack )
			return 1;
		endif

                SetObjProperty( ghost, "#FastLooting", 1 );
		foreach item in ( EnumerateItemsInContainer( corpse ))
			if( item.container == corpse )
				if( !EquipItem( ghost, item ))
					MoveItemToContainer( item, ghost.backpack );
				endif
			endif
                        SleepMS(2);
		endforeach

                EraseObjProperty( ghost, "#FastLooting" );

		Resurrect( ghost );
		AP_RefreshVitals( ghost );
  
		if( auto_res != -1 ) // -1 means infinite uses
			auto_res -= 1;
			SetObjProperty( ghost, "AutoRes", auto_res );
                        if( auto_res <= 0 )
                                EraseObjProperty( ghost, "AutoRes" );
                        endif
		endif
		return 1;
	endif
 
	return 0;
endfunction
