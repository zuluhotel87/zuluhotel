/*
        Maintened by *Edwards
        
        2008-12-03

        Last Modifications 2009-10-25
             * Cleaned codes for better performances
*/
use uo;
use os;
use util;

include ":death:death";

CONST MAX_RANGE	:= 8;

program DeathScript( corpse )

	var pieces := array
	{
		0x1AE1,
		0x1B11,
		0x1B13,
		0x1B15,
		0x1B17,
		0x1B19,
		0x1B1B,
		0xF7E
	};

	if( RandomInt( 3 ) == 1 )
		ResZombie( corpse, pieces );
	else
		PrintTextAbove( corpse, "*the skeleton crumbles to dust*" );
		SleepMS(1000);
		DestroyItem( corpse );
	endif

	return 1;
endprogram

function ResZombie( corpse, byref pieces )

	PrintTextAbove( corpse, "*the pieces twitch*" );
	SleepMS(30);

	var corpse_color := corpse.color;
	var corpse_x := corpse.x;
	var corpse_y := corpse.y;
	var corpse_z := corpse.z;
	var realm := corpse.realm;
	var template := GetObjProperty( corpse, "npctemplate" );

	foreach obj_type in ( pieces )
 
		var piece := CreateItemAtLocation( corpse.x, corpse.y, corpse.z, obj_type, 1, corpse.realm );
		piece.color := corpse_color;
		piece.movable := 0;
                piece.saveonexit := 0;
                
		MoveItem( corpse, piece );

		SleepMS(2);
	endforeach

	DestroyItem( corpse );
	Sleep(7);

	var recovered_pieces := array;
	foreach item in ( ListItemsNearLocation( corpse_x, corpse_y, corpse_z, MAX_RANGE, realm ))
		if(( item.objtype in pieces ) )
			if( !Recovered( item, recovered_pieces ))
				SetObjProperty( item, "#taken", GetPid() );
                                recovered_pieces.Append( item );
			endif
		endif
		SleepMS(2);
	endforeach

	if( recovered_pieces.Size() == pieces.Size() )
		if( !MoveItemsToCenter( corpse_x, corpse_y, recovered_pieces ))
			return 0;
		endif

		foreach item in ( recovered_pieces )
			DestroyItem( item );
			SleepMS(2);
		endforeach

		var npc := CreateNPCFromTemplate( template, corpse_x, corpse_y, corpse_z, 0, realm );
		if( npc.errortext )
			SysLog( "Error making npc ->"+npc.errortext );
			SysLog( "template-"+template+" x-"+corpse_x+" y-"+corpse_y+" z-"+corpse_z+" realm-"+realm );
		endif
	endif

	return 1;
endfunction

function MoveItem( corpse, item )

	var num_tries := 0;
	var newx, newy;
	var newz;

	repeat
		newx := RandomInt( MAX_RANGE ) - CInt( MAX_RANGE / 2 );
		newy := RandomInt( MAX_RANGE ) - CInt( MAX_RANGE / 2 );
		newx := newx + corpse.x;
		newy := newy + corpse.y;
                newz := GetWorldHeight( newx, newy );

		num_tries += 1;
		if( num_tries > 20 )
			return 0;
		endif

		SleepMS(2);
	until( CheckLOSAt( corpse, newx, newy, newz ));

        item.movable := 1;
	MoveObjectToLocation( item, newx, newy, newz, item.realm, MOVEOBJECT_FORCELOCATION );
        item.movable := 0;

        return 1;
endfunction

function MoveItemsToCenter( x, y, byref recovered_pieces )

	var line_list := dictionary;
	foreach item in ( recovered_pieces )
		line_list[item] := GetCoordsInLine( item.x, item.y, x, y );
		SleepMS(2);
	endforeach

	while( line_list.Size() > 0 )
		foreach item in ( line_list.Keys() )
			if( !item )
				// Item was lost, it is no longer valid.
				return 0;
			endif

			var new_coord := line_list[item][1];

                        item.movable := 1;
			MoveObjectToLocation( item, new_coord.x, new_coord.y, item.z, item.realm, MOVEOBJECT_FORCELOCATION );
                        item.movable := 0;
                        
			line_list[item].Erase(1);

			if( line_list[item].Size() <= 0 )
				// Successfully moved to the center.
				line_list.Erase(item);
			elseif( item.container )
				// A player is holding the item, its no longer valid.
				return 0;
			endif
			SleepMS(2);
		endforeach

		SleepMS(850);
	endwhile

	return 1;
endfunction

function Recovered( item, recovered_pieces )

	if( GetObjProperty( item, "#taken" ))
		return 0;
	endif

	foreach thing in ( recovered_pieces )
		if( item.graphic == thing.graphic )
			return 1;
		endif

		SleepMS(2);
	endforeach

	return 0;
endfunction
