/*
        Created by *Edwards
        
        Last Modifications 2009-01-03
*/
use uo;
use os;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":gumps:gumpprompt";
include ":gumps:requestgump";
include ":gumps:yesno";
include "include/security";
include ":datafile:datafile";

var msg_array := array{};
var g_datafile := DFOpenDataFile( ":accounts:Note", DF_CREATE );

program textcmd_AccountNote( parms )

        var mobile,
            acctname;
            
	if( Lower( TypeOf( parms )) == "array" )
                mobile := parms[1];
		acctname := parms[2];
        else
                mobile := parms;
	endif

        if( !AuthorizationCode( mobile ))
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        endif

	if( !acctname )
		SendSysMessage( mobile, "Select a player." );
		var targ := Target( mobile, TGTOPT_NOCHECK_LOS );
		if( !targ.acctname )
			SendSysMessage( mobile, "Cancelled." );
			return 0;
		else
			acctname := targ.acctname;
		endif
	endif
 
	if( !acctname )
		acctname := RequestGump( mobile, "Enter the account name you want to look up.", "", "", CANCEL_BTN_ON );
		if( !acctname )
			SendSysMessage( mobile, "Cancelled." );
			return 0;
		endif
	endif

	var account := FindAccount( acctname );
	if( account.errortext )
		GumpPrompt( mobile, "Error with account name "+acctname+" [P] "+acctname.errortext );
		return 0;
	endif

	NotesGump( mobile, account, acctname );
 
        return 1;
endprogram

function NotesGump( mobile, account, acctname )

        var gump := GFCreateGump();
	GFResizePic( gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 640, 480 );
	GFResizePic( gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 610, 30 );

	GFTextLine( gump, 20, 20, 2100, "Account Name:  "+account.name );
 
	var status;
	if( account.banned )
		status := "Banned";
	elseif( !account.enabled )
		status := "Disabled";
	else
		status := "Active";
	endif
 
	GFTextRight( gump, 605, 20, 2100, "Account Status:  "+status );
 
	msg_array.Shrink(0);

	GFResizePic( gump, 15, 50, 2620, 610, 380 );
 
        var data_elem := DFFindElement( g_datafile, acctname, DF_CREATE );
	var acct_notes := data_elem.GetProp( "Notes" );

	var num_lines := acct_notes.Size();
	if( num_lines < 19 )
		//Makes sure that 'off the gump' notes dont get removed.
		num_lines := 19;
	endif

	var y_pos := 55;
	var i;
	for( i:=1; i<=num_lines; i+=1 )
		var line := acct_notes[i];
		if( line == error )
			line := "";
		endif
		msg_array.Append( GFTextEntry( gump, 20, y_pos, 595, 20, 2100, line ));
		y_pos += 20;
	endfor

	GFResizePic( gump, 15, 435, GFGetCfgConst( "Defaults", "ForeGround" ), 610, 30 );

	GFAddButton( gump, 585, 440, 4011, 4030, GF_CLOSE_BTN, 0xA001 );
	GFTextLine( gump, 425, 440, 2100, "Update Account Notes" );
 
	var input := GFSendGump( mobile, gump );
        if( input[0xA001] )
                UpdateNotes( mobile, acctname, input );
                return 1;
        endif
        
        SendSysMessage( mobile, "Cancelled." );

	return 1;
endfunction

function UpdateNotes( mobile, acctname, input )

	var i;
	for( i:=1; i<=msg_array.Size(); i+=1 )
		var line := GFExtractData( input, msg_array[i] );
		if( line )
			msg_array[i] := line;
		else
			msg_array[i] := "";
		endif
	endfor

	//Clear off empty lines.
	for( i:=msg_array.Size(); i>=1; i-=1 )
		if( Len(msg_array[i]) <= 0 )
			msg_array.Erase(i);
		endif
		SleepMS(2);
	endfor
 
        var data_elem := DFFindElement( g_datafile, acctname, DF_CREATE );
	if( msg_array.Size() < 1 )
		data_elem.EraseProp( "Notes" );
	else
		data_elem.SetProp( "Notes", msg_array );
	endif

	SendSysMessage( mobile, "Writing to data notes... done!" );

	return 1;
endfunction
