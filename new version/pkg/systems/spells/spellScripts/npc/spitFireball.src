/*
        Created by *Edwards

        2009-02-07

        Last Modifications 2010-04-27
             * Cleaned codes for better performances
*/
use uo;
use os;

include "include/client";
include "include/shapes";
include ":brainAI:npcCommands";
include ":brainAI:npcUtil";
include ":spells:spells";

program SpellScript_BlowFire( params )

	var mobile := params[1];
	//var info := params[2];
	var targ := params[3];
        //var circle := MS_GetCircle( info.spell_id );
	params := 0;
 
        if( Distance( mobile, targ ) < 5 )
                return 0;
        endif
        
        PlayMovingEffect( mobile, targ, GFX_SMALL_FIREBALL, 10, 10, 1 );

	var coord_list := GetCoordsInLine( mobile.x, mobile.y, targ.x, targ.y );
	foreach coord in coord_list
		SleepMS(105);
  
		if( _coord_iter == 1 ) // Dont make one where its standing
			continue;
		endif

                var z_pos := CInt( GetWorldHeight( coord.x, coord.y, mobile.realm )),
		    field := CreateItemAtLocation( coord.x, coord.y, z_pos, "FireField_NS", 1, mobile.realm );
      
		field.SetDuration( RandomDiceRoll( "5d6+15" ));
	endforeach

	PlaySoundEffect( targ, 0x208 );
        PlayMovingEffect( mobile, targ, 0x36b0, 7, 14, 1 );
        
        var amount := SPELL_MathDamage( mobile, 20 );
        SPELL_ApplyDamage( targ, amount, DMG_FIRE, mobile, DMG_FIRE );

        var npc_cfg := NPC_GetNPCConfig( mobile.npctemplate );
	foreach coord in GetCoordsInSquare( targ.x, targ.y, CInt( npc_cfg.SpellRadius ))
		SleepMS(5);
  
		if( RandomInt(2) != 1 ) // Don't place a fire field
			continue;
		endif

                var z_pos := CInt( GetWorldHeight( coord.x, coord.y, mobile.realm )),
		    field := CreateItemAtLocation( coord.x, coord.y, z_pos, "FireField_NS", 1, mobile.realm );

		PlayStationaryEffect( coord.x, coord.y, z_pos, SelectRandomExplosion(), 10, 10, 0, mobile.realm );
  
		field.SetDuration( RandomDiceRoll( "5d6+15" ));
	endforeach
       
	return 1;
endprogram

function SelectRandomExplosion()

	case ( RandomInt(3) )
		1: return GFX_EXPLODE_2; break;
		2: return GFX_EXPLODE_3; break;
		default: return GFX_EXPLODE_1; break;
	endcase

        return 1;
endfunction
