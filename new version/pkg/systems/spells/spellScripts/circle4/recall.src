/*
        Maintened by *Edwards

        2008-10-26

        Last Modifications 2010-04-27
             * Cleaned codes for better performances
*/
use uo;
use os;

include "include/itemUtil";
include ":areas:managment";
include ":spells:spells";

program SpellScript_Recall( params )

	var mobile := params[1];
	var info := params[2];
	var targ := params[3];
        //var circle := SPELL_GetCircle( info.spell_id );
	params := 0;
 
        var rune := Lower( TypeOf( targ )) != "array",
            dest;
        
        if( rune )
		if( !targ.IsRecallRune() )
			SendSysMessage( mobile, "You can only cast that on a recall rune." );
			return 0;
		elseif( !useItem_check( mobile, targ, ITEM_INCONTAINER ))
			return 0;
		endif
  
		dest := targ.GetDestination();
        else
		dest := targ[2];
        endif
        
	if( !dest )
		SendSysMessage( mobile, "That rune is not marked." );
		return 0;
        elseif( A_IsIn( mobile, AREAS_NO_RECALL ))
		SendSysMessage( mobile, "You cannot recall from here." );
		return 0;
        elseif( A_IsIn( dest, AREAS_NO_MARK ))
		SendSysMessage( mobile, "You cannot recall to this place." );
		return 0;
	elseif( ListMultisInBox( dest.x-3, dest.y-3, dest.z-10, dest.x+3, dest.y+3, dest.z+10, dest.realm ).Size() > 0 && !mobile.cmdlevel )
		SendSysMessage( mobile, "This ability cannot be used to recall too near or in a house!" );
		return 0;
        endif
        
	var orig_pos := struct;
	    orig_pos.+x := mobile.x;
	    orig_pos.+y := mobile.y;
	    orig_pos.+z := mobile.z;
	    orig_pos.+realm := mobile.realm;
     
	SPELL_PlaySpellSFX( info.spell_id, targ );
	SPELL_PlaySpellGFX( info.spell_id, orig_pos, mobile );
	SPELL_PlaySpellGFX( info.spell_id, mobile, mobile );
        
	if( rune )
                targ.SendToDestination( mobile );
        else
                MoveObjectToLocation( mobile, dest.x, dest.y, dest.z, dest.realm, MOVEOBJECT_FORCELOCATION );
        endif
        
        return 1;
endprogram
