/*
        Maintened by *Edwards
        
        Last Modifications 2008-11-09
*/
use uo;
use util;

include ":attributes:attributes";
include ":brainAI:npcUtil";
include ":classes:classes";

program Install()

	print( "INSTALLING: Exported Vital - RegenRate and MaxValue functions ..." );
	return 1;
endprogram

exported function GetHitsRegenRate( mobile )

	var base_regen := CInt( AP_GetSettingsCfgElem( "Regen" ).Hits ) * 100;
        if( GetObjProperty( mobile, WARRIOR ))
                 base_regen *= ClasseBonus( mobile, WARRIOR );
        elseif( GetObjProperty( mobile, RANGER ))
                 base_regen *= ClasseBonus( mobile, RANGER );
        endif

	return CInt( base_regen ) + AP_GetVitalRegenRateMod( mobile, "hits" );
endfunction

exported function GetHitsMaximumValue( mobile )

	var vital_points := GetAttribute( mobile, "Strength" ) * 100;
	if( !vital_points )
		vital_points := 100;
	endif

	return vital_points;
endfunction

exported function GetManaRegenRate( mobile )

	var base_regen := CInt( AP_GetSettingsCfgElem( "Regen" ).Mana ) * 100;
        if( GetObjProperty( mobile, MAGE ))
                 base_regen *= ClasseBonus( mobile, MAGE );
        endif

	return CInt( base_regen ) + AP_GetVitalRegenRateMod( mobile, "mana" );
endfunction

exported function GetManaMaximumValue( mobile )

	var vital_points := GetAttribute( mobile, "Intelligence" ) * 100;
	if( !vital_points )
		vital_points := 100;
	endif

	return vital_points;
endfunction

exported function GetStaminaRegenRate( mobile )

	var base_regen := CInt( AP_GetSettingsCfgElem( "Regen" ).Stamina ) * 100;
        if( GetObjProperty( mobile, BARD ))
                 base_regen *= ClasseBonus( mobile, BARD );
        endif

	return CInt( base_regen ) + AP_GetVitalRegenRateMod( mobile, "stamina" );
endfunction

exported function GetStaminaMaximumValue( mobile )

	var vital_points := GetAttribute( mobile, "Dexterity" ) * 100;
	if( !vital_points )
		vital_points := 100;
	endif

	return vital_points;
endfunction

exported function GetHungerRegenRate( mobile )

	//Avoid compiler warnings
        mobile := mobile;

	return 0;
endfunction

exported function GetHungerMaximumValue( mobile )

	//Avoid compiler warnings
        mobile := mobile;

	return 1000;
endfunction
