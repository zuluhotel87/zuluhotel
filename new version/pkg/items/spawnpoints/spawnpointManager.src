/*
        Created by *Edwards

        2010-03-29
*/
use uo;
use os;

include "include/arrays";
include ":datafile:datafile";
include ":security:report";
include ":spawnpoints:manager";
include ":spawnpoints:settings";
include ":spawnpoints:spawnpoints";

var list_serials := array{};
var time_spawn := 60;

program SpawnpointManager()

	SetGlobalProperty( "#SpawnpointManagerPid", GetPid() );

        Set_Critical(1);

	RegisterSpawnPoints();

        Set_Critical(0);

	while( 1 )
		var event := Wait_For_Event( time_spawn );
		if( event )
                        var spawnpoint := event.spawnpoint;
			case( event.type )
				EVENT_SPAWNPOINT_REGISTER:
                                        RegisterSpawnpoint( spawnpoint );
					break;
				EVENT_SPAWNPOINT_DELETE:
                                        DeleteSpawnpoint( spawnpoint );
					break;
				EVENT_SPAWNPOINT_RESTART:
                                        RestartSpawnpoint( spawnpoint );
					break;
				EVENT_SPAWNPOINT_REFRESH:
                                        RegisterSpawnPoints();
					break;
				EVENT_SPAWNPOINT_DESPAWNER:
                                        DespawnAll( spawnpoint );
					break;
				EVENT_SPAWNPOINT_DEATH:
                                        CheckSpawn( spawnpoint );
					break;
				EVENT_SPAWNPOINT_CHECK:
                                        CheckSpawnpoint( spawnpoint );
					break;
			endcase
		endif

		SleepMS(2);
	endwhile

	return 1;
endprogram

function RegisterSpawnpoint( spawnpoint )

        return list_serials.Append( spawnpoint.serial );
endfunction

function DeleteSpawnpoint( spawnpoint_serial )

        return RemoveFromArray( list_serials, spawnpoint_serial );
endfunction

function RestartSpawnpoint( spawnpoint )

        return SetObjProperty( spawnpoint, "Reset", ReadGameClock() );
endfunction

function CheckSpawnpoint( spawnpoint )

        var script := Start_Script( ":spawnpoints:manager/spawnpointControl", spawnpoint );
        if( script.errortext )
               ReportText( "Error starting script <:spawnpoint:manager/spawnpointControl> -->"+script.errortext, REPORT_SYSLOG );
               return 0;
        endif

        return 1;
endfunction
