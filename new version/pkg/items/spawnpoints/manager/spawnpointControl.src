/*
        Maintened by *Edwards

        2010-04-02
*/
use uo;
use os;

include ":spawnpoints:spawnpoints";

program Control_Spawnpoint( spawnpoint )

	var sp_settings := GetSpawnpointSettings( spawnpoint );
	if( sp_settings[7] )
                //Spawnpoint is disable.
		return 0;
	endif

	if( sp_settings[2] == "nil" || !sp_settings[2] )
		// Anything to spawn?
		return 0;
	endif

        ValidateSpawnpoint( spawnpoint, sp_settings );

	var spawn_serials := GetObjProperty( spawnpoint, "SpawnSerials" ),
            spawn_Size := spawn_serials.Size();

        if( !CheckSpawn( spawnpoint ))
		return 0;
        endif

        var num_toSpawn := CInt( sp_settings[3] - spawn_Size ); // How many to spawn?
	if( num_toSpawn < 1 )
		return 0;
	endif

	var serial,
            num;

	for( num:=0; num<num_toSpawn; num+=1 )
		case( sp_settings[1] )
			"NPC":
				serial := SpawnNpc( spawnpoint, sp_settings );
                                if( serial )
					spawn_serials.Append( serial );
                                endif
                                break;
			"Group":
                                serial := SpawnGroup( spawnpoint, sp_settings );
                                if( serial )
					spawn_serials.Append( serial );
                                endif
                                break;
			"Item":
                                serial := SpawnItem( spawnpoint, sp_settings );
                                if( serial )
					spawn_serials.Append( serial );
                                endif
                                break;
			"Container":
                                serial := SpawnContainer( spawnpoint, sp_settings );
                                if( serial )
					spawn_serials.Append( serial );
                                endif
                                break;
		endcase
		SleepMS(5);
	endfor

	SetObjProperty( spawnpoint, "SpawnSerials", spawn_serials );

	return 1;
endprogram
