/*
        Created by *Edwards

        2009-09-06
*/
use uo;
use os;

include ":damage:damage";
include ":attributes:attributes";

program BomberDamage( parms )

        var potion := parms[1],
            power := parms[2];

        var x := potion.x,
            y := potion.y,
            z := potion.z,
            realm := potion.realm;

        var temp_list := ListMobilesNearLocation( x, y, z, 0, realm );
        if( temp_list )
                checkDamage( potion, temp_list );
        endif
                
        var i;
        for( i:=1; i<=power; i+=1 )
                temp_list := ListMobilesNearLocation( x+i, y, z, 0, realm );
                if( temp_list )
                        checkDamage( potion, temp_list );
                endif
                
                temp_list := ListMobilesNearLocation( x-i, y, z, 0, realm );
                if( temp_list )
                        checkDamage( potion, temp_list );
                endif
                
                temp_list := ListMobilesNearLocation( x, y+i, z, 0, realm );
                if( temp_list )
                        checkDamage( potion, temp_list );
                endif
                
                temp_list := ListMobilesNearLocation( x, y-i, z, 0, realm );
                if( temp_list )
                        checkDamage( potion, temp_list );
                endif

                SleepMS(10);
        endfor
        
	return 1;
endprogram

function checkDamage( potion, temp_list )

	foreach mobile in temp_list
                if( CheckLosAt( potion, mobile.x, mobile.y, mobile.z ))
			ApplyDamageEX( mobile, CInt( AP_GetVitalMaximumValue( mobile, HITS ) + 1 ));
                endif
		SleepMS(10);
	endforeach
 
        return 1;
endfunction
