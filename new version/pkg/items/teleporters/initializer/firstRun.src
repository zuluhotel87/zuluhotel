/*
        Maintened by *Edwards
        
        2008-12-06
        
        Last Modifications 2008-12-06
             * Teleporters won't save anymore and thus this should has to be run each startup
*/
use uo;
use os;
use cfgfile;
use polsys;

include ":security:report";

CONST TELE_CFG_PATH := ":teleporters:";

program InitializeTeleporters( params )

	if( !params )
		BuildAllRealms();
	else
		var realm_name := params[1];
		var cfg_name := params[2];
		if( cfg_name )
			BuildTeleportersInCfg( cfg_name, realm_name );
		elseif( realm_name )
			ProcessConfigsInRealm( realm_name );
		else
			BuildAllRealms();
		endif
	endif
	
	UnloadConfigFile( TELE_CFG_PATH+"teleporters" );

	return 1;
endprogram

function BuildAllRealms()

	var realm_list := Realms().Keys();

	foreach realm in realm_list
		ProcessConfigsInRealm( realm );
		SleepMS(2);
	endforeach

	return 1;
endfunction

function ProcessConfigsInRealm( realm )

	var cfg_file := ReadConfigFile( TELE_CFG_PATH+"teleporters" );
	var cfg_elem := cfg_file[realm];
	if( cfg_elem.errortext )
		return 0;
	endif

	foreach entry in GetConfigStringArray( cfg_elem, "Config" )
		BuildTeleportersInCfg( entry, realm );
		SleepMS(2);
	endforeach

	return 1;
endfunction

function BuildTeleportersInCfg( cfg_name, realm )

	var tele_cfg_file := ReadConfigFile( TELE_CFG_PATH+cfg_name );
	if( tele_cfg_file.errortext )
		ReportText( "Error: Could not find config file '"+TELE_CFG_PATH+cfg_name+"'", REPORT_SYSLOG );
		return 0;
	endif

	foreach elem_name in GetConfigStringKeys( tele_cfg_file )
		var cfg_elem := tele_cfg_file[elem_name];
		var location := cfg_elem.Location;
		var destination := cfg_elem.Destination;
		var properties := GetConfigStringDictionary( cfg_elem, "Property" );

		CreateTeleporter( elem_name, location, destination, properties, realm );
		
		if( cfg_elem.TwoWay )
			CreateTeleporter( elem_name, destination, location, properties, realm );
		endif

		SleepMS(2);
	endforeach

	UnloadConfigFile( TELE_CFG_PATH+cfg_name );

	return 1;
endfunction

function CreateTeleporter( elem_name, location, destination, properties, realm )

	var create_at := MakeCoordinates( location, realm );

	// First check to make sure a teleporter isn't already there.
	foreach object in ( ListItemsNearLocation( create_at.x, create_at.y, create_at.z, 0, realm ))
		if( object.IsTeleporter() )
			ReportText( "Unable to create '"+elem_name+"' - Teleporter already found on that position.", REPORT_SYSLOG );
			return 0;
		endif

		SleepMS(2);
	endforeach

	var item := CreateItemAtLocation( create_at.x, create_at.y, create_at.z, "TelePad", 1, create_at.realm );
	if( item.errortext )
		ReportText( "Error: Cant create teleporter for '"+elem_name+"' ->"+item.errortext, REPORT_SYSLOG );
		return 0;
	endif
	
	var send_to := MakeCoordinates( destination, realm );
	item.SetDestination( send_to.x, send_to.y, send_to.z, send_to.realm );
	SetName( item, "TelePad ["+elem_name+"]" );
	
	foreach member in properties
		case( Lower( TypeOf( item.Get_Member(_member_iter ))))
			"integer" : member := CInt( member ); break;
			"string" : member := CStr( member ); break;
			"double" : member := CDbl( member ); break;
			default:
				ReportText( "Error: Unable to set property '"+_member_iter+"' on teleporter '"+elem_name+"'", REPORT_SYSLOG );
				break;
		endcase
		
		item.Set_Member( _member_iter, member );
		
		SleepMS(2);
	endforeach
	
	return item;
endfunction

function MakeCoordinates( coord_string, realm )

	var coordinate := struct{"x", "y", "z", "realm"};

	coord_string := SplitWords( coord_string );
	coordinate.x := CInt( coord_string[1] );
	coordinate.y := CInt( coord_string[2] );

	if( coord_string[3] == error || coord_string[3] == "-255" )
		coordinate.z := GetWorldHeight( coordinate.x, coordinate.y );
	else
		coordinate.z := CInt( coord_string[3] );
	endif

	if( !coord_string[4] )
		coordinate.realm := realm;
	else
		coordinate.realm := coord_string[4];
	endif

	return coordinate;
endfunction
