/*
        Created by *Edwards

        2008-10-11
*/
use uo;
use os;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":gumps:requestgump";
include "include/security";
include ":traps:traps";

program textcmd_trap( mobile )

        if( !AuthorizationCode( mobile ))
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        endif
        
        SendSysMessage( mobile, "Select the container to trap." );
        var targ := Target( mobile );
        if( !targ )
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        elseif( !targ.IsA( POLCLASS_CONTAINER ))
                SendSysMessage( mobile, "You must select a container!" );
                return 0;
        elseif( !ReserveItem( targ ))
                SendSysMessage( mobile, "That is already in use." );
                return 0;
        elseif( !targ.movable )
                SendSysMessage( mobile, "You cannot use that." );
                return 0;
        elseif( Distance( mobile, targ ) > 1 )
                SendSysMessage( mobile, "You are too far away from the trap." );
                return 0;
        elseif( IsTrapRevealed( targ ))
                SendSysMessage( mobile, "It has been trapped already!" );
                return 0;
        endif

        //Initialize the gump
        var gump := GFCreateGump();

        //Load Main Background
	GFResizePic( gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 250, 425 );

        GFResizePic( gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 25 );
	GFTextMid( gump, 15, 17, 220, 1720, "Setup a Trap" );

        //BackgroundAreas
	GFResizePic( gump, 15, 45, GFGetCfgConst( "Defaults", "ForeGround" ), 220, 370 );
        GFTextMid( gump, 15, 60, 220, 1720, "Main Menu" );

        //Initialize the options...
        var config := ReadConfigFile( ":traps:traps" );
        if( config.errortext )
                SendSysMessage( mobile, "Error cannot open <:traps:traps> --> "+config.errortext );
                return 0;
        endif
        
        var cfg_keys := GetConfigStringKeys( config ),
            cfg_keys_num := cfg_keys.Size(),
            counter := 0,
            y_pos := 90;
        
        GFPage( gump, 1 );
	foreach key in ( cfg_keys )

		GFTextLine( gump, 25, y_pos, 2100, key );
		GFAddButton( gump, 210, y_pos+3, 2117, 2118, GF_CLOSE_BTN, _key_iter );

		y_pos += 20;
		counter += 1;

		if ( counter >= 18 && _key_iter < cfg_keys_num )
			GFAddButton( gump, 283, 385, 0xA92, 0xA93, GF_PAGE_BTN, gump.cur_page+1 );
			GFPage( gump, gump.cur_page+1 );
			GFAddButton( gump, 283, 40, 0xA90, 0xA91, GF_PAGE_BTN, gump.cur_page-1 );
			counter := 0;
			y_pos := 40;
		endif
		SleepMS(2);
	endforeach

        //And now we need to know the answer...
        var input := GFSendGump( mobile, gump );
        input := input[0];
        
        if( !input )
                SendSysMessage( mobile, "Cancelled." );
		return 0;
        endif
        
        var strength := RequestGump( mobile, "Please enter a value for the strength of the trap.", "1 to 200" );
        if( strength <= 0 && strength > 200 )
                SendSysMessage( mobile, "Cancelled." );
		return 0;
        endif
        
        AddTrap( targ, cfg_keys[input], strength, 1 );
        
        return 1;
endprogram
