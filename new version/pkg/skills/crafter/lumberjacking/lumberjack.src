/*
        Maintened by *Edwards

        2008-10-16

        Last Modifications 2008-12-13
             * Fixed a check distance between of mobile & targ
             * Removed a check for objtype of the axe in the hands

        Last Modifications 2009-01-18
             * Verifications of the codes
             * Mobile will now face targ

        Last Modifications 2009-07-31
             * Added useItem_check()

        Last Modifications 2009-11-24
             * Added check with LOS

        Last Modifications 2010-01-07
             * Added check if mobile is in noDamage area will get a penalty for amount harvested

        Last Modifications 2010-03-19
             * Added Autoloop to lumberjacking
*/
use uo;
use os;
use util;

include "include/client";
include "include/facings";
include "include/itemUtil";
include "include/landtiles";
include ":areas:managment";
include ":attributes:attributes";
include ":autoloop:autoloop";
include ":classes:classes";
include ":crafting:crafting";

const NO_DAMAGE_BONUS := 1.50;
const HARVEST_BONUS := 2.5;

program skill_Lumberjacking( mobile, axe )

        EquipItem( mobile, axe );
        if( !useItem_check( mobile, axe, ITEM_EQUIPPED ))
		return 0;
	endif

        SendSysMessage( mobile, "Select a tree to lumber." );
        var targ := TargetCoordinates( mobile );
        if( !targ )
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        elseif( CoordinateDistance( mobile.x, mobile.y, targ.x, targ.y ) > 2 )
                SendSysMessage( mobile, "This is too far away." );
                return 0;
        elseif( !IsTree( targ.objtype ))
                SendSysMessage( mobile, "You can't get any wood from that." );
                return 0;
        endif

        SendAutoLoop( mobile );
        SendSysMessage( mobile, "You start lumberjacking...", 3, 89 );

        var x := mobile.x,
            y := mobile.y;

	while( AutoLoop( mobile ))
		var wood_amount := HarvestResource( "wood", targ.x, targ.y, 1, 2, targ.realm );
		if( !wood_amount )
                	SendSysMessage( mobile, "There's no more wood left there." );
                	return 0;
        	endif

                var delay := RandomInt( 4 ) + 2;
                while( delay )
		        Sleep( 1 );
		        delay -= 1;
		        if( x != mobile.x || y != mobile.y || !axe )
		                SendSysMessage( mobile, "You stop lumberjacking." );
                                return 0;
                        endif

                        Play_lumber_effects( mobile, targ );
	        endwhile

                if( SkillCheck( mobile, LUMBERJACKING, -1 ) > 0 )
                        GetRessource( mobile, axe );
                else
                        SpecialEffects( mobile, axe );
                endif

                CheckToolWear( mobile, axe, LUMBERJACKING );
	endwhile

        EndAutoLoop( mobile );
        SendSysMessage( mobile, "You stop lumberjacking...", 3, 89 );

        return 1;
endprogram

function GetRessource( mobile, axe )

        var colored_chances := CInt( AP_GetSkill( mobile, LUMBERJACKING ) * ClasseBonus( mobile, CRAFTER )),
            wood_amount := CInt( GetWoodAmount( mobile, axe ) * HARVEST_BONUS ),
            objtype;

        if( RandomInt( 75 ) <= colored_chances )
		objtype := GetLog( mobile );
        else
		objtype := 0x1bdd;
                wood_amount *= 2;
        endif
        
        createLogs( mobile, objtype, wood_amount );

        return 1;
endfunction

function createLogs( mobile, objtype, amount )

	var logs := CreateItemInBackpack( mobile, objtype, CInt( amount ));
        if( !logs )
                CreateItemAtLocation( mobile.x, mobile.y, mobile.z, objtype, CInt( amount ), mobile.realm );
        endif

        SendSysMessage( mobile, "You put "+CInt( amount )+" "+GetRessourceName( logs )+" in your backpack." );

        return 1;
endfunction

function GetLog( mobile )

        var cfg	:= ReadConfigFile( ":logs:itemdesc" );
        if( cfg.errortext )
                SendSysMessage( mobile, "Error reading config <:logs:itemdesc> -->"+cfg.errortext );
                return 0;
        endif

        var the_keys := GetConfigStringKeys( cfg ),
            possibles := array{};

        foreach key in the_keys
		var harvest := CInt( cfg[key].HarvestChance ),
                    difficulty := CInt( cfg[key].Difficulty );

                if( !harvest )
                        //Skip sand definition in itemdesc
                        continue;
                endif

		if( RandomInt( 155 ) >= harvest )
			if( SkillCheck( mobile, LUMBERJACKING, difficulty, 0, ADV_DISABLE ) > 0 )
				possibles.Append( key );
                        endif
		endif
                SleepMS(5);
	endforeach

        return CInt( possibles.RandomEntry() );
endfunction

function GetWoodAmount( mobile, axe )

        var skill := AP_GetSkill( mobile, LUMBERJACKING ),
            max_amount := CInt( RandomDiceRoll( "1d"+CInt( skill / 25 )+"+3" ) * ClasseBonus( mobile, CRAFTER ));

        var bonus := GetObjProperty( axe, "LumberjackingBonus" );
	if( bonus )
		max_amount *= bonus;
	endif

        if( !A_IsIn( mobile, AREAS_NO_DAMAGE ))
                max_amount *= NO_DAMAGE_BONUS;
        endif

        if( max_amount < 1 )
		max_amount := 1;
	endif

        return CInt( max_amount );
endfunction

function GetRessourceName( item )

	var name := item.desc;

	if( item.amount > 1 )
		var i := Len( name ),
		    amount := item.amount,
		    count := 2;
		while( CInt( amount / 10 ))
			count += 1;
			amount := CInt( amount / 10 );
                        SleepMS(5);
		endwhile

		name := name[count+1, i-count];
	endif

	return name;
endfunction

function SpecialEffects( mobile, axe )
        
        var bonus := CInt(( AP_GetSkill( mobile, LUMBERJACKING ) / 30 ) * ClasseBonus( mobile, CRAFTER ));
        if( bonus < 1 )
                bonus := 1;
        endif
        
        var chance := RandomInt( 100 ) + bonus;

        var axe_bonus := GetObjProperty( axe, "LumberjackingBonus" );
	if( axe_bonus )
		chance += 5;
        endif

        var found;
        case( CInt( chance ))

		15:	CreateItemInBackpack( mobile, 0xF90, 1 );
			SendSysMessage( mobile, "You find some dead wood!" );

                        found := 1;
			break;

                108:	CreateItemInBackpack( mobile, 0x1bf7, 1 );
			SendSysMessage( mobile, "You find some valuable wood!" );

                        found := 1;
			break;
	endcase
 
        if( !found )
                SendSysMessage( mobile, "You fail to find any usable wood." );
                return 0;
        endif

	return 1;
endfunction

function Play_lumber_effects( mobile, targ )

        TurnObjectToward( mobile, targ.x, targ.y );

        PerformAction( mobile, 0xD );
        SleepMS(1000);
        PlaySoundEffect( mobile, 0x13F );

        SleepMS( 500 );

        return 1;
endfunction
