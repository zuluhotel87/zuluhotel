/*
        Created by *Edwards

        2009-11-22

        Last Modifications 2009-12-04
             * Added loop messages
             * Removed deprecated var counter and now using only amt for while loop
*/
use uo;
use os;
use cfgfile;

include "include/itemUtil";
include ":attributes:attributes";
include ":crafting:crafting";

var item_config := ReadConfigFile( ":*:itemdesc" );
var craft_config := ReadConfigFile( ":tinkering:tinkering" );

program use_MapmakersPen( who, tool )

	if( !useItem_check( who, tool, ITEM_INCONTAINER ))
		return 0;
	endif

	var rinfo := sendCraftGump( who, TINKERING );
	if( rinfo == 0 )
		return 0;
	endif

	var the_objtype := rinfo[1],
	    amt := rinfo[2],
	    repair := rinfo[3];
     
     	if( repair )
                RepairItem( who, TINKERING );
        elseif( craft_config[Hex( the_objtype )].assemble == 1 )
		CraftTinkerAssembly( who, tool, the_objtype, amt );
	else
		makeTinkerItem( who, tool, the_objtype, amt );
	endif

	return 1;
endprogram

function CraftTinkerAssembly( who, tool, the_objtype, amt )

	if( !the_objtype || !amt )
		SendSysMessage( who, "Cancelled." );
		return 0;
	endif

 	var craft_elem := craft_config[the_objtype],
 	    skill_elem := menu_config[craft_skill],
            x := who.x,
	    y := who.y;

        SendSysMessage( who, "You start "+skill_elem.EndMessage+"...", 3, 89 );

	while( amt )
		if( !tool )
			break;
		endif

                if( amt != -1 )
                	SendSysMessage( who, "Looping ["+amt+" more to go].", 3, 89 );
                else
                	SendSysMessage( who, "Looping.", 3, 89 );
                endif
                
                Sleep( CRAFT_DELAY );

                Craft_PlayEffects( who, skill_elem );

                if( who.x != x || who.y != y )
			SendSysMessage( who, "Cancelled." );
			break;
                endif

                var parts_list := Craft_CheckParts( who, craft_elem );
                if( !parts_list )
                	break;
                elseif( !Craft_ConsumeParts( who, parts_list ))
                	break;
                endif
                
		if( Craft_SkillCheck( who, craft_elem, CRAFT_ADV_ALL ) > 0 )
			var the_item := Craft_CreateItem( who, the_objtype, craft_elem );
                        Craft_ExpCheck( who, craft_elem, the_item );
		else
			SendSysMessage( who, "You lost some materials." );
		endif

                CheckToolWear( who, tool, craft_skill );

                if( amt != -1 )
                	amt -= 1;
                endif
	endwhile

        SendSysMessage( who, "You stop "+skill_elem.EndMessage+"...", 3, 89 );

	return 1;
endfunction

function makeTinkerItem( who, tool, the_objtype, amt )

	if( !the_objtype || !amt )
		SendSysMessage( who, "Cancelled." );
		return 0;
	endif

	var ressource := MaterialSelection( who, craft_skill, Lower( craft_config[the_objtype].type ));
	if( !ressource )
		return 0;
	endif
        
	var skill2 := craft_config[the_objtype].skill2,
            difficulty2 := craft_config[the_objtype].difficulty2,
            type2 := craft_config[the_objtype].type2,
            use_on := ressource[1],
            useObjtype := ressource[2],
            mat_diff := ressource[1].GetRessourceDifficulty(),
            ressource2,
            use_on2;
            
	if( TypeOf( type2 ) == "String" )
		ressource2 := MaterialSelection( who, craft_skill, Lower( type2 ));
		if( !ressource2 )
			return 0;
		endif

		use_on2 := ressource2[1];
	endif

 	var craft_elem := craft_config[the_objtype],
 	    skill_elem := menu_config[craft_skill],
            material := CInt( craft_elem.Material ),
            material2 := CInt( craft_elem.Material2 ),
            x := who.x,
	    y := who.y;
     
        var main_objtype := useObjtype;
        if( material2 > material )
                main_objtype := use_on2.objtype;
                mat_diff := ressource2[1].GetRessourceDifficulty();
        endif

        SendSysMessage( who, "You start "+skill_elem.EndMessage+"...", 3, 89 );

	while( amt )
		if( !tool )
			break;
		endif

                if( amt != -1 )
                	SendSysMessage( who, "Looping ["+amt+" more to go].", 3, 89 );
                else
                	SendSysMessage( who, "Looping.", 3, 89 );
                endif
                
                Sleep( CRAFT_DELAY );

                Craft_PlayEffects( who, skill_elem );

                if( who.x != x || who.y != y )
			SendSysMessage( who, "Cancelled." );
			break;
                elseif( material > use_on.amount )
			SendSysMessage( who, "You do not have the required materials to make that." );
                	break;
                elseif( use_on2 )
                        if( material2 > use_on2.amount )
				SendSysMessage( who, "You do not have the required materials to make that." );
                		break;
                        endif
                endif
                
                if( !SubtractAmount( use_on, material ))
			SendSysMessage( who, "You do not have the required materials to make that." );
                	break;
                elseif( use_on2 )
                        if( !SubtractAmount( use_on2, material2 ))
				SendSysMessage( who, "You do not have the required materials to make that." );
                		break;
                        endif
                endif
                
                if( Craft_SkillCheck( who, craft_elem, CRAFT_ADV_ALL, mat_diff ) > 0 )
                        if( skill2 )
                                if( !SkillCheck( who, skill2, difficulty2, "", ADV_DISABLE ))
                                        SendSysMessage( who, "You lost some materials." );
				        break;
                                endif
                        endif
                        
			var the_item := Craft_CreateItem( who, the_objtype, craft_elem, main_objtype );
                        Craft_ExpCheck( who, craft_elem, the_item );
		else
			SendSysMessage( who, "You lost some materials." );
		endif

                CheckToolWear( who, tool, craft_skill );

                if( amt != -1 )
                	amt -= 1;
                endif
	endwhile

        SendSysMessage( who, "You stop "+skill_elem.EndMessage+"...", 3, 89 );

	return 1;
endfunction
