/*
        Maintened by *Edwards
        
        2009-01-25
*/
use uo;
use os;
use util;
use math;

include ":attributes:attributes";
include ":brainAI:npcUtil";
include ":brainAI:tamedUtil";
include ":classes:classes";
include ":equipment:protections";
include ":timedscripts:timedScripts";
include ":totem:totem";

program UseBandage( parms )

	var mobile := parms[1],
	    bandage := parms[2],
	    targ := parms[3];
     
	if( GetProcess( CInt( GetObjProperty( mobile, "#VeterinaryPid" ))))
                SendSysMessage( mobile, "You are already doing something else." );
		return 0;
	else
		SetObjProperty( mobile, "#VeterinaryPid", GetPid() );
	endif
        
        var npcCorpse_cfg := NPC_GetNPCConfig( GetObjProperty( targ, "npctemplate" )),
            npc_cfg := NPC_GetNPCConfig( targ.npctemplate );
            
        if(( !npcCorpse_cfg.TameSkill && targ.IsA( POLCLASS_CORPSE )) || ( !npc_cfg.TameSkill && targ.IsA( POLCLASS_NPC )))
                SendSysMessage( mobile, "That cannot receive your help." );
                return 0;
        endif
                
	var vet_skill := AP_GetSkill( mobile, VETERINARY );
	var lore_skill := AP_GetSkill( mobile, ANIMAL_LORE );

	if( targ.IsA( POLCLASS_CORPSE ))
		ResurrectBeast( mobile, targ, vet_skill, lore_skill, bandage );
	elseif( targ.poisoned )
		CurePatient( mobile, targ, vet_skill, bandage );
	else
                HealPatient( mobile, targ, vet_skill, lore_skill, bandage );
        endif
        
	return 1;
endprogram

function ResurrectBeast( mobile, targ, vet_skill, lore_skill, bandage )

        var npcCorpse_cfg := NPC_GetNPCConfig( GetObjProperty( targ, "npctemplate" ));
        if( !GetObjProperty( targ, "Master" ) || GetObjProperty( targ, "SummonedBy" ))
		SendSysmessage( mobile, "You can only resurrect tamed creature." );
		return 0;
	endif
  
	if( bandage.amount < 5 )
		SendSysMessage( mobile, "You don't have enough bandages." );
		return 0;
	elseif( vet_skill < 90 || lore_skill < 90 )
		SendSysMessage( mobile, "You don't have enought skills to ressurect the creature." );
	 	return 0;
	elseif( targ.multi )
                SendSysMessage( mobile, "You cannot resurrect in a house." );
                return 0;
        endif
 
        var x := mobile.x,
            y := mobile.y,
            tx := targ.x,
            ty := targ.y,
            delay := 18;
            
        if( GetObjProperty( mobile, RANGER ))
                delay /= ClasseBonus( mobile, RANGER );
        endif
        
        SendSysMessage( mobile, "You try to bring "+npcCorpse_cfg.Name+" back to life." );

 	while( Cint( delay ))
		Sleep( 1 );
		delay -= 1;
		if( x != mobile.x || y != mobile.y || tx != targ.x || ty != targ.y || mobile.dead )
                        SendSysMessage( mobile, "You have lost your concentration." );
			return 0;
		endif
	endwhile
 
        if( GetObjProperty( targ, "PreviouslyRes" ))
		SendSysMessage( mobile, "You couldn't resurrect your patient." );
                return 0;
        endif
 
        if( SkillCheck( mobile, VETERINARY, 90 ) > 0 )
                var master := GetObjProperty( targ, "Master" ),
                    prev_tame := GetObjProperty( targ, "PreviouslyTamed" );

                var npc := CreateNPCFromTemplate( GetObjProperty( targ, "npctemplate" ), targ.x, targ.y, targ.z, 0, mobile.realm );
	        if( npc.errortext )
		        SendSysMessage( mobile, "Error creating NPC ["+GetObjProperty( targ, "npctemplate" )+"] -> "+npc.errortext );
                        return 0;
	        endif

                if( IsTotem( npc ))
                        Sleep(1);
                        if( !Totem_Resurrect( npc, targ, master ))
                                SetObjProperty( npc, "GuardKill", 1 );
                                npc.Kill();
                                return 0;
                        endif
                else
			SetObjProperty( npc, "PreviouslyTamed", prev_tame );
			SetObjProperty( npc, "PreviouslyRes", mobile.serial );
                endif
                
               	DestroyItem( targ );

		SendSysMessage( mobile, "You bring "+npc.name+" back to life!" );
		npc.facing := mobile.facing;
		SetObjProperty( npc, "Master", master );
		RestartScript( npc );
	else
		SendSysMessage( mobile, "You couldn't resurrect your patient." );
	endif
 
	SubtractAmount( bandage, 5 );
	CreateItemInBackpack( mobile, 0x0e20, 5 );

	return 1;
endfunction

function CurePatient( mobile, targ, vet_skill, bandage )

	if( bandage.amount < 2 )
		SendSysMessage( mobile, "You don't have enough bandages." );
		return 0;
	endif
 
        var delay := 14;
            
        if( GetObjProperty( mobile, RANGER ))
                delay /= ClasseBonus( mobile, RANGER );
        endif
        
	delay += 2;
        SendSysMessage( mobile, "You start to cure "+targ.name+"." );

 	while( Cint( delay ))
		Sleep( 1 );
		delay -= 1;
		if( mobile.dead || targ.dead || !targ.poisoned )
                        SendSysMessage( mobile, "You have lost your concentration." );
			return 0;
		endif
	endwhile

        var current_poison := CInt( GetObjProperty( targ, "#PoisonedLevel" ));
        if( !current_poison )
                SendSysMessage( mobile, "That is not poisoned." );
                return 0;
        endif

        var difficulty := CInt((( current_poison * 25 ) + 100 ));
        if( GetObjProperty( mobile, RANGER ))
                difficulty /= ClasseBonus( mobile, RANGER );
        endif

        var veterinary := AP_GetSkill( mobile, VETERINARY );
        if( SkillCheck( mobile, VETERINARY, difficulty ) > 0 || veterinary >= difficulty )
                TS_LowerDuration( targ, "DefaultPoison", -1 );
                SendSysMessage( mobile, "You cured level "+current_poison+" poison." );
	else
		SendSysMessage( mobile, "You couldn't cure your patient." );
        endif

	SubtractAmount( bandage, 2 );
	CreateItemInBackpack( mobile, 0x0e20, 2 );

	return 1;
endfunction

function HealPatient( mobile, targ, vet_skill, lore_skill, bandage )

        if( CInt( AP_GetVitalMaximumValue( targ, HITS )) <= CInt( AP_GetVital( targ, HITS )))
                SendSysMessage( mobile, "This patient don't have a bruise!" );
                return 0;
        elseif( bandage.amount < 1 )
		SendSysMessage( mobile, "You don't have enough bandages." );
		return 0;
	endif
 
        var delay := 10,
            heal;
            
        if( GetObjProperty( mobile, RANGER ))
                delay /= ClasseBonus( mobile, RANGER );
        endif

	delay += 2;
        SendSysMessage( mobile, "You start to heal "+targ.name+"." );
 
        var vital := GetVital( targ, "Hits" );
        var count := 10;
        
 	while( Cint( delay ))
		Sleep( 1 );
		delay -= 1;
		if( mobile.dead || targ.dead || targ.poisoned )
                        SendSysMessage( mobile, "You have lost your concentration." );
			return 0;
                elseif( GetVital( targ, "Hits" ) < vital )
                        var subtract := SubtractAmount( bandage, 1 );
                        if( !subtract )
                                SendSysMessage( mobile, "You don't have enough bandages." );
           		        SendSysMessage( mobile, "You couldn't heal your patient." );
		                return 0;
                        else
			        SendSysMessage( mobile, "Yours fingers slip..." );
                                CreateItemInBackpack( mobile, 0x0e20, 1 );
			        count -= 1;
			        vital := GetVital( targ, "Hits" );
	                endif
		endif
	endwhile

        var difficulty := CInt( AP_GetVitalMaximumValue( targ, HITS ) - AP_GetVital( targ, HITS ));
        if( difficulty > 65 )
                difficulty := 65;
        endif
        
        if( SkillCheck( mobile, VETERINARY, difficulty ) > 0 )

                vet_skill /= 8;
                lore_skill /= 15;
                heal := RandomDiceRoll( CInt( vet_skill )+"d3+2" ) + RandomDiceRoll( "1d8+2" ) + CInt( lore_skill );

                if( GetObjProperty( mobile, RANGER ))
                        heal *= ClasseBonus( mobile, RANGER );
                endif

	        if( count < 1 )
		        count := 1;
	        endif

                heal := CInt( heal * count / 10 );
                
		SendSysMessage( mobile, "You heal "+heal+" damage." );
                HealDamage( targ, heal );
	else
		SendSysMessage( mobile, "You couldn't heal your patient." );
        endif

	SubtractAmount( bandage, 1 );
        CreateItemInBackpack( mobile, 0x0e20, 1 );
	
	return 1;
endfunction
