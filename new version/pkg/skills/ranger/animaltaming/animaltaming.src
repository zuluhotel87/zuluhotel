/*
        Maintened by *Edwards
        
        2009-01-20
        
        Last Modifications 2009-01-22
             * Completed the creation of the skill

        Last Modifications 2009-02-14
             * Switched every RANGER ability for DRUID

        Last Modifications 2009-06-05
             * Switched every DRUID ability for RANGER
*/
use uo;
use os;

include "include/facings";
include "include/string";
include ":animaltaming:taming";
include ":attributes:attributes";
include ":brainAI:npcNerves";
include ":brainAI:npcUtil";
include ":brainAI:tamedUtil";
include ":brainai:npcCommands";
include ":classes:classes";
include ":timeutils:time";

program skill_AnimalTaming( mobile )

	SendSysMessage( mobile, "What would you like to tame?" );
 	var the_creature := Target( mobile ),
            difficulty := CInt( NPC_GetNPCConfig( the_creature.npctemplate ).TameSkill );

	if( !the_creature )
                SendSysMessage( mobile, "Cancelled." );
		return 0;
        elseif( Distance( mobile, the_creature ) > 15 )
		SendSysMessage( mobile, "You are too far away from the creature!" );
		return 0;
        elseif( !the_creature.IsA( POLCLASS_NPC ) || !difficulty )
		SendSysMessage( mobile, "That can not be tamed!" );
		return 0;
        elseif( difficulty > AP_GetSkill( mobile, ANIMAL_TAMING ))
		SendSysMessage( mobile, "You have no chances of taming this creature!" );
                return 0;
        elseif( the_creature.master )
		SendSysMessage( mobile, "That creature looks already tamed by "+the_creature.master.name+"." );
		return 0;
	endif
 
        TurnObjectToward( mobile, the_creature.x, the_creature.y );
        
        var C_name := the_creature.name,
            prev_tame := GetObjProperty( the_creature, "PreviouslyTamed" ),
            bonus := 10,
            chance := 75;
            
        chance /= ClasseBonus( mobile, RANGER );
        bonus /= ClasseBonus( mobile, RANGER );
        
        difficulty += CInt( bonus );
 
        // Will be much easier to make angry if high numner
        var calming_diff := difficulty + 10;
        calming_diff /= ClasseBonus( mobile, RANGER );
        
        if( prev_tame[2] > ReadGameClock() )
                if( IsEvil( the_creature ))
                         difficulty += 10;
                         if( RandomInt( 100 ) < CInt( chance ))
                                  PrintTextAbove( the_creature, mobile.name+" has angered the beast!" );
                                  AI_Attack( the_creature, mobile );
                                  return 0;
                         endif
                endif
        endif

        PrintTextAbove( mobile, "What a nice "+TruncateArticle( C_name ));
	if( !WaitAndCheckTheTamer( mobile, the_creature ))
		return 0;
	endif
        
	if( SkillCheck( mobile, ANIMAL_LORE, CInt( calming_diff ), "", ADV_DISABLE ) > 0 )
                if( GetNerveProcess( the_creature, "Combat" ).pid )
                         PrintTextAbove( the_creature, mobile.name+" has calmed the beast!" );
                         SetObjProperty( the_creature, "#Peacemaking", ReadGameClock() + 10 );
                         AI_WarMode( the_creature, 0 );
                endif
        elseif( IsEvil( the_creature ))
                if( RandomInt( 100 ) < CInt( chance ))
                         PrintTextAbove( the_creature, mobile.name+" has angered the beast!" );
                         AI_Attack( the_creature, mobile );
                         return 0;
                endif
        endif

	PrintTextAbove( mobile, "I've always wanted "+C_name+" like you." );
	if( !WaitAndCheckTheTamer( mobile, the_creature ))
		return 0;
	endif

	PrintTextAbove( mobile, C_name+", will you be my friend?" );
	if( !WaitAndCheckTheTamer( mobile, the_creature ))
		return 0;
	endif
 
        if( prev_tame[2] && prev_tame[2] > ReadGameClock() )
                SendSysMessage( mobile, "You failed to tame the creature." );
                return 0;
        endif
 
        var adv_status := ADV_ALL;
        if( prev_tame )
                //If creature was previously tamed. Cancel all type of gains.
                adv_status := ADV_DISABLE;
        endif
        
        if( SkillCheck( mobile, ANIMAL_TAMING, difficulty, "", adv_status ) > 0 )
                SendSysMessage( mobile, "You successfully tame "+C_name );
                tameCreature( the_creature, mobile );
        else
                SendSysMessage( mobile, "You failed to tame the creature." );
        	if( RandomInt( 100 ) < CInt( chance ))
                        SendSysMessage( mobile, "And have made the creature unresponsive to taming." );
                        SetObjProperty( the_creature, "PreviouslyTamed", array{mobile.serial, ReadGameClock() + 1000} );
		endif
        endif
        
        return 1;
endprogram

function IsEvil( the_creature )

	var npc_cfg := NPC_GetNPCConfig( the_creature.npctemplate );
        if( npc_cfg.Alignment == "evil" )
                return 1;
        endif

	return 0;
endfunction

function WaitAndCheckTheTamer( mobile, the_creature )

	Sleep( 5 );
        
        if( Distance( mobile, the_creature ) > 15 )
		SendSysMessage( mobile, "You're too far away to continue taming." );
		return 0;
        elseif( GetObjProperty( the_creature, "Master" ))
		SendSysMessage( mobile, the_creature.name + " belongs to someone else!" );
		return 0;
	elseif( !CheckLineOfSight( mobile, the_creature ))
		SendSysMessage( mobile, "The creature isn't in your line of sight." );
		return 0;
	endif

	return 1;
endfunction
