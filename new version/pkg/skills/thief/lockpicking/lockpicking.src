/*
        Maintened by *Edwards
        
        2008-10-16
        
        Last Modifications 2009-08-24
             * Added useItem_check()
             * Fixed issue with delays
*/
use uo;
use os;

include "include/itemUtil";
include ":attributes:attributes";
include ":classes:classes";
include ":keys:key";
include ":lockpicking:lockpicking";

program skill_LockPicking( mobile, lockpick )

       	if( !useItem_check( mobile, lockpick, ITEM_INCONTAINER ))
		return 0;
	endif

        SendSysMessage( mobile, "What would you like to pick?" );
        var targ := Target( mobile );
        if( !targ )
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        elseif( !useItem_check_lockpicking( mobile, targ ))
                return 0;
	elseif( !KP_IsLockable( targ ))
		SendSysMessage( mobile, "That is not unlockable." );
		return 0;
        elseif( !targ.locked )
                SendSysMessage( mobile, "That doesn't appear to be locked." );
                return 0;
        elseif( targ.IsA( POLCLASS_DOOR ) && targ.multi )
                SendSysMessage( mobile, "The Gods frown on picking this door!" );
                return 0;
        elseif( GetObjProperty( targ, "NoLockpick" ))
                SendSysMessage( mobile, "It's seem to be magically protected." );
                return 0;
        endif

        var lock_difficulty := GetLockPickDifficulty( targ );
        if( !lock_difficulty )
                SendSysMessage( mobile, "You have no chances of picking that lock!" );
                return 0;
        endif
        
        PlaySoundEffect( targ, 0x0242 );
        
        var delay := 12;
        if( GetObjProperty( mobile, THIEF ))
                delay /= ClasseBonus( mobile, THIEF );
        endif
        
        var x := mobile.x,
            y := mobile.y;
            
        while( Cint( delay ))
                var hostiles := ListHostiles( mobile, 5, LH_FLAG_LOS );
                
		if( x != mobile.x || y != mobile.y || mobile.dead )
                        SendSysMessage( mobile, "You have lost your concentration." );
			return 0;
                elseif( Len( hostiles ) >= 1 )
                        SendSysMessage( mobile, hostiles[1].name+" breaks your concentration!" );
                        return 0;
		endif

		delay -= 1;
  
 		Sleep(1);
	endwhile
        
        if( SkillCheck( mobile, LOCKPICKING, lock_difficulty ) > 0 )
                PlaySoundEffect( targ, 0x0200 );
                PrintTextAbove( targ, "*Unlocked*" );

                targ.locked := 0;
        else
                SendSysMessage( mobile, "You fail to pick the lock." );
                SubtractAmount( lockpick, 1 );

                PlaySoundEffect( targ, 0x011f );
        endif

	return 1;
endprogram

function useItem_check_lockpicking( mobile, item )

        //This function replace the original in include/itemUil because of the "lock" feature.
        
	if( !ReserveItem( item ))
                SendSysMessage( mobile, "You cannot use that item." );
		return 0;
	elseif( !Accessible( mobile, item ))
                SendSysMessage( mobile, "You do not have access to that item." );
		return 0;
        elseif( !CoordinateDistance( mobile.x, mobile.y, item.x, item.y ) > 2 )
                SendSysMessage( mobile, "You are too far from the item." );
                return 0;
        endif

        return 1;
endfunction
