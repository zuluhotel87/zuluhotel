/*
        Created by *Edwards

        2009-10-28

        Last Modifications 2009-12-11
             * Added account property value...
*/
use uo;
use os;

include "include/itemUtil";
include ":datafile:datafile";
include ":multicommands:multicommands";
include ":statistics:account";
include ":timeutils:gameTime";
include ":timeutils:time";

var stats_datafile := DFOpenDataFile( ":statistics:statistics" );

program UseBoatDeed( mobile, boat )

       	if( !useItem_check( mobile, boat, ITEM_INCONTAINER ))
		return 0;
        endif
        
        var data_elem := DFFindElement( stats_datafile, mobile.acctname ),
            online_Time := CInt( data_elem.GetProp( "OnlineTime" )),
            delay_young := CInt( SEC_DAY * 2 );
            
        if( online_Time < ( SEC_DAY * 2 ) && !mobile.cmdlevel )
                var delay_left := CInt( delay_young - online_Time ),
                    delay_string := TIME_GetTimeDesc( delay_left );
                    
                SendSysMessage( mobile, "Your character is too young to own a boat yet. You must wait "+delay_string+"." );
                return 0;
        endif
            
        var boat_serial := GetAccountProperty( mobile.acctname, "HasBoat" );
        if( boat_serial )
                var boat := SystemFindObjectBySerial( boat_serial );
                if( !boat )
                        EraseAccountProperty( mobile.acctname, "HasBoat" );
                else
                	SendSysMessage( mobile, "You already have a boat." );
			return 0;
                endif
	endif
 
        var ship_name := boat.GetShipName();
        if( ship_name.errortext )
                SendSysMessage( mobile, "Error to get ship name -->"+ship_name.errortext );
                return 0;
        endif
        
        var boat_flag := ForShipFacing( mobile );
        var targ := Multi_GetTarget( mobile, ship_name, boat_flag, 10 );
        if( !targ )
                return 0;
        endif
        
        var multi := Multi_MakeMulti( mobile, ship_name, targ, boat_flag );
        if( !multi )
                return 0;
        endif
        
        var tillerman := multi.tillerman;
        tillerman.SetShipType( boat.objtype );
        
        var dest := DestroyItem( boat );
        if( dest.errortext )
                SendSysMessage( mobile, "Error destroying boat model -->"+dest.errortext );
                return 0;
        endif

        tillerman.SetOwner( mobile );
        
        SetAccountProperty( mobile.acctname, "HasBoat", multi.serial );
        
        MoveObjectToLocation( mobile, multi.x+1, multi.y+1, multi.z+3, multi.realm, MOVEOBJECT_FORCELOCATION );
 
	return 1;
endprogram

function ForShipFacing( mobile )

        var flag;
	case( CInt( mobile.facing ))
                1:
                2:      flag := CRMULTI_FACING_EAST;
                        break;
                3:
                4:      flag := CRMULTI_FACING_SOUTH;
                        break;
                5:
                6:      flag := CRMULTI_FACING_WEST;
                        break;
                7:
                8:      flag := CRMULTI_FACING_NORTH;
                        break;
        endcase
        
        return flag;
endfunction
