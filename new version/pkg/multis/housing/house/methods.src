/*
        Created by *Edwards

        2009-12-12
        
        Last Modifications 2010-02-04
             * Moved all function into house's method
*/
use uo;
use cfgfile;
use os;
use util;

program Install()

	return 1;
endprogram

exported function CanAccess( house, mobile )

	if( IsOwner( house, mobile ))
		return 1;
	elseif( IsCoOwner( house, mobile ))
		return 1;
	elseif( IsFriend( house, mobile ))
		return 1;
	elseif( mobile.cmdlevel >= 3 )
		return 1;
	else
		return 0;
	endif
endfunction

exported function CanCommand( house, mobile )

	if( IsOwner( house, mobile ))
		return 1;
	elseif( IsCoOwner( house, mobile ))
		return 1;
	elseif( mobile.cmdlevel >=3 )
		return 1;
	else
		return 0;
	endif
endfunction

exported function IsOwner( house, mobile )

	if( mobile.serial == GetOwner( house ).serial )
		return 1;
	else
		return 0;
	endif
endfunction

exported function GetOwner( house )

	return house.GetProp( "Owner" );
endfunction

exported function SetOwner( house, owner )

	var info := struct;
	info.+name := owner.name;
	info.+serial := owner.serial;
	info.+acctname := owner.acctname;

	return house.SetProp( "Owner", info );
endfunction

exported function IsCoOwner( house, mobile )

	if( mobile.serial == GetCoOwner( house ).serial )
		return 1;
	else
		return 0;
	endif
endfunction

exported function GetCoOwner( house )

	return house.GetProp( "CoOwner" );
endfunction

exported function SetCoOwner( house, co_owner )

	var info := struct;
	info.+name := co_owner.name;
	info.+serial := co_owner.serial;
	info.+acctname := co_owner.acctname;

	return house.SetProp( "CoOwner", info );
endfunction

exported function RemoveCoOwner( house )

	return house.EraseProp( "CoOwner" );
endfunction

exported function GetFriends( house )

	var friends_list := house.GetProp( "FriendsList" );
	if( !friends_list )
		friends_list := array{};
	endif

	return friends_list;
endfunction

exported function AddFriend( house, mobile )

	var friends_list := GetFriends( house );

	var info := struct;
	info.+name := mobile.name;
	info.+serial := mobile.serial;
	info.+acctname := mobile.acctname;

	friends_list.Append( info );

	return SetFriendsList( house, friends_list );
endfunction

exported function IsFriend( house, mobile )

	var friends_list := GetFriends( house );

	var i;
	for( i:=1; i<=friends_list.Size(); i+=1 )
		if( friends_list[i].name == mobile.name )
			return i;
		endif
                SleepMS(5);
	endfor

	return 0;
endfunction

exported function SetFriendsList( house, list )

	return house.SetProp( "FriendsList", list );
endfunction

exported function GetBanned( house )

	var ban_list := house.GetProp( "BanList" );
	if( !ban_list )
		ban_list := array{};
	endif

	return ban_list;
endfunction

exported function AddBan( house, mobile )

	var ban_list := GetBanned( house );

	var info := struct;
	info.+name := mobile.name;
	info.+serial := mobile.serial;
	info.+acctname := mobile.acctname;

	ban_list.Append( info );

	return SetBanList( house, ban_list );
endfunction

exported function IsBanned( house, mobile )

	var ban_list := GetBanned( house );

	var i;
	for( i:=1; i<=ban_list.Size(); i+=1 )
		if( ban_list[i].name == mobile.name )
			return i;
		endif
                SleepMS(5);
	endfor

	return 0;
endfunction

exported function SetBanList( house, list )

	return house.SetProp( "BanList", list );
endfunction

exported function GetVisitsList( house )

	var visits_list := house.GetProp( "VisitsList" );
	if( !visits_list )
		visits_list := array{};
	endif

	return visits_list;
endfunction

exported function AddVisit( house, mobile )

	var visits_list := GetVisitsList( house );

        if( mobile.serial in visits_list )
                return 0;
        else
		visits_list.Append( mobile.serial );
        endif

	return SetVisitsList( house, visits_list );
endfunction

exported function SetVisitsList( house, list )

	return house.SetProp( "VisitsList", list );
endfunction

exported function SetHouseName( house, name )

	return house.SetProp( "HouseName", name );
endfunction

exported function GetHouseName( house )

	return house.GetProp( "HouseName" );
endfunction

exported function GetMaxLockDowns( house )

        var cfg := ReadConfigFile( ":multicommands:itemdesc" );
        if( cfg.errortext )
                SysLog( "Error reading config <:multicommands:itemdesc> -->"+cfg.errortext );
                return 0;
        endif

        var house_elem := cfg[house.objtype];
        if( house_elem.errortext )
                SysLog( "Error couldn't find house objtype <"+house.objtype+"> -->"+house_elem.errortext );
                return 0;
        endif
        
        var max_lock := CInt( house_elem.MaxLockDowns );
        if( !max_lock )
                max_lock := CInt( GetObjProperty( house, "MaxLockDowns" ));
        endif

	return max_lock;
endfunction

exported function GetMaxSecure( house )

        var cfg := ReadConfigFile( ":multicommands:itemdesc" );
        if( cfg.errortext )
                SysLog( "Error reading config <:multicommands:itemdesc> -->"+cfg.errortext );
                return 0;
        endif

        var house_elem := cfg[house.objtype];
        if( house_elem.errortext )
                SysLog( "Error couldn't find house objtype <"+house.objtype+"> -->"+house_elem.errortext );
                return 0;
        endif

        var max_secure := CInt( house_elem.MaxSecure );
        if( !max_secure )
                max_secure := CInt( GetObjProperty( house, "MaxSecure" ));
        endif

	return CInt( house_elem.MaxSecure );
endfunction

exported function SetGuildStone( house, guildid )

	return house.SetProp( "GuildStone", guildid );
endfunction

exported function GetGuildStone( house )

	return house.GetProp( "GuildStone" );
endfunction

exported function EraseGuildStone( house )

	return house.EraseProp( "GuildStone" );
endfunction

exported function GetHouseDeedObjType( house )

        var cfg := ReadConfigFile( ":multicommands:itemdesc" );
        if( cfg.errortext )
                SysLog( "Error reading config <:multicommands:itemdesc> -->"+cfg.errortext );
                return 0;
        endif

        var house_elem := cfg[house.objtype];
        if( house_elem.errortext )
                SysLog( "Error couldn't find house objtype <"+house.objtype+"> -->"+house_elem.errortext );
                return 0;
        endif

	return CInt( house_elem.DeedObjType );
endfunction

exported function GetLastVisit( house )

        var time := house.GetProp( "LastVisited" );
        if( !time )
                time := "Not visited yet";
        endif

	return time;
endfunction

exported function SetLastVisit( house )

        var time := StrFormatTime( "%m-%d-%Y %I:%M %p", CInt( POLCore().systime ));

	return house.SetProp( "LastVisited", time );
endfunction
