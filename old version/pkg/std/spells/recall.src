use uo;

include "include/objtype";
include "include/spelldata";
include "include/areas";
include "include/client";
include "include/recalling";
include "../pkg/std/housing/utility";

program cast_recall( caster )

	if (!can_cast(caster, 4))
		return;
	endif

	if( IsForbiddenAreaToRecallFrom( caster ) )
		SendSysMessage( caster, "You can't gate from there." );
		return 0;
	endif

	SendSysMessage( caster, "Select a rune to recall from." );

	var cast_on := CanTargetThing(caster, 4, TGTOPT_CHECK_LOS );
	if(!cast_on)
		return;
	elseif( !Accessible( caster, cast_on ) )
		SendSysMessage( caster, "You can't reach that." );
		return 0;
	elseif( cast_on.objtype != UOBJ_RUNE && cast_on.objtype != 0x6100 )
		SendSysMessage( caster, "You can only cast that on a recall rune or a runebook!" );
		return 0;
	elseif( !ReserveItem( cast_on ) )
		return 0;
	endif

	var tox := CInt( GetObjProperty( cast_on, "x" ) );
	var toy := CInt( GetObjProperty( cast_on, "y" ) );
	var toz := CInt( GetObjProperty( cast_on, "z" ) );
	var sx  := caster.x;
	var sy  := caster.y;
	var sz  := caster.z;

	if( !tox && !toy && !toz )
		SendSysMessage( caster, "This is a blank rune!");
		return 0;
	
	elseif( IsForbiddenAreaToRecallTo( caster, tox, toy ) )
		SendSysMessage( caster, "You can't recall to this place." );
		if( cast_on.objtype == UOBJ_RUNE )
			DestroyItem(cast_on);
		endif
		return 0;
	endif

	var multi := GetStandingHeight( tox, toy, toz ).multi;
	if( multi )
		if( !IsOwner( caster, multi )  )
			if( !IsFriend( caster, multi ) )
				SendSysMessage( caster, "You can't recall to this house." );
				return;
			endif
		endif
	endif

	PlaySoundEffect( caster, SFX_SPELL_RECALL1 );
	sleepms(250);
	MoveCharacterToLocation( caster, tox, toy, toz );
	PlaySoundEffect( caster, SFX_SPELL_RECALL2 );

endprogram