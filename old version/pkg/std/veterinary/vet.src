/////////////////////////////////////////////////////////
//vet.src
//
//Just like healing, but works on tamed NPCs
//
// Author: Dream Weaver
//
//////////////////////////////////////////////////////////

use uo;
use cfgfile;
use os;

include "include/client";
include "include/attributes";
include "include/dotempmods";
include "include/classes";
include "include/random";

const BLOODY_BANDAGE 	  := 0x0e20;

//To heal
const BANDAGES_TO_HEAL	  := 1;
const DELAY_TO_HEAL	  := 5;

//To cure
const BANDAGES_TO_CURE	  := 2;
const DELAY_TO_CURE	  := 6;

//Delay multiplier when you heal yourself
const DELAY_MULT_FOR_SELF := 3;

//Multiply diff by this for the point value
const POINTS_MULTIPLIER	  := 20;


program use_bandages ( parms )
 
	var character := parms[1];
	var patient := parms[2];
	var bandages := parms[3];

	if( patient.poisoned )
		TryToCure( character, patient, bandages );
	elseif( GetHp(patient) < GetMaxHp(patient) )
		TryToHeal( character, patient, bandages );
	else
		SendSysMessage( character, "This creature don't even have a bruise!" );
	endif

endprogram


function TryToCure( character, patient, bandages )

	if( bandages.amount < BANDAGES_TO_CURE )
		SendSysMessage( character, "You don't have enough bandages." );
		return;
	endif

	var delay 	:= DELAY_TO_CURE;

	if( patient.serial == character.serial )
		delay := CInt( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character, "You start to cure yourself" );
	else
		SendSysMessage( character, "You start to cure " + patient.name );
	 	SendSysMessage( patient, character.name + " starts to cure you" );
	endif

	if( GetObjProperty( character, CLASSEID_RANGER ) )
		delay := CInt( delay / CLASSE_BONUS );
	endif

	sleep( delay );

	if( Distance( character, patient ) > 1 )
		SendSysMessage( character, "The creature is too far." );
		return;
	endif

	if( character.dead )
		return;
	endif

	if( patient.dead )
		SendSysMessage( character, "The creature is dead." );
	endif

	var plvl 	:= PoisonLevel( patient );
	var diff 	:= CInt(plvl * 20 + 15);
	var points 	:= diff * POINTS_MULTIPLIER;

	if( CheckSkill( character, SKILLID_VETERINARY, diff, points ) )
		CurePoison( patient, 0, character.name + " has cured you!" );
		SendSysMessage( character, "You cured the creature." );
	else
		SendSysMessage( character, "You couldn't cure the creature." );
	endif

	SubtractAmount( bandages, BANDAGES_TO_CURE );
	CreateItemInBackpack( character, BLOODY_BANDAGE, BANDAGES_TO_CURE );

endfunction


function TryToHeal( character, patient, bandages )

	if( bandages.amount < BANDAGES_TO_HEAL )
		SendSysMessage( character, "You don't have enough bandages." );
		return;
	endif

	var delay 	:= DELAY_TO_HEAL;
	var healing	:= CInt( GetEffectiveSkill( character, SKILLID_VETERINARY ) / 10 );
	var animal	:= CInt( GetEffectiveSkill( character, SKILLID_ANIMALLORE ) / 5 );
	var healed	:= RandomDiceStr( healing + "d4+" + healing ) + RandomDiceStr( "1d8+2" ) + animal;

	if( patient.serial == character.serial )
		delay := CInt( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character, "You start to heal yourself." );
	else
		SendSysMessage( character, "You start to heal " + patient.name );
	 	SendSysMessage( patient, character.name + " starts to heal you" );
	endif

	if( GetObjProperty( character, CLASSEID_RANGER ) )
		delay := CInt( delay / CLASSE_BONUS );
		healed := CInt( healed * CLASSE_BONUS );
	endif

	var count	:= 10;
	var shp	:= GetHp(character);
	while( delay )
		sleep( 1 );
		delay := delay - 1;
		if( GetHp(character) < shp )
			SendSysMessage( character, "Yours fingers slip..." );
			count := count - 1;
			shp   := GetHp(character);
		endif
	endwhile

	if( Distance( character, patient ) > 1 )
		SendSysMessage( character, "The creature is too far." );
		return;
	endif

	if( character.dead )
		return;
	endif

	if( patient.dead )
		SendSysMessage( character, "The creature is dead." );
	endif

	var diff 	:= CInt(GetMaxHp(patient) - GetHp(patient));
	var points 	:= diff * POINTS_MULTIPLIER;

	var bonus := GetObjProperty( patient, "HealingIncrease" );
	if( bonus )
		healed := healed + CInt( healed * bonus * 0.1 );
	endif

	if( count < 1 )
		count := 1;
	endif

	healed := CInt( healed * count / 10 );

	if( CheckSkill( character, SKILLID_VETERINARY, diff, points ) )
		HealDamage( patient, healed );
		SendSysMessage( character, "You healed " + healed + " damage." );
		SendSysMessage( patient, character.name + " healed " + healed + " damage." );
	else
		SendSysMessage( character, "You couldn't heal the creature." );
	endif

	SubtractAmount( bandages, BANDAGES_TO_HEAL );
	CreateItemInBackpack( character, BLOODY_BANDAGE, BANDAGES_TO_HEAL );

endfunction