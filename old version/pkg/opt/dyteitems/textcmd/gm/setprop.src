/////////////////////////////////////////////////////////////
// SETPROP.SRC
//
// Author: DC
// Date: 2/14/99
//
// Description: An GM text command that changes the value
//	  of the given inherent property. Note that
//	  mobiles have more props than items and
//	  some properties are read-only.
//
// Syntax: .setprop <propname> <value>
// program textcmd_setprop: params: character using
//				  text
//			  Splits the param text into 2
//			  strings (propname and value)
//					  passes the given prop and
//			  value to SetObjctProp and
//			  prints the old and new values
//			  if the write was successful.
//
// function SetObjctProp: Matches the given text to one of
//			the known properties of the
//			targetted object. If the prop
//			name could not be matched, it
//			throws an uninitialized error
//			which the main program catches.
//			only writable props are listed.
//
// TODO: Give access to props setable only with
//   "SetObjectProperty" function.
//
//   ********
//   **NOTE**: to change an object's name, use "rename" cmd
//   ********
// updated by zulu (zulu@cadvision.com)
/////////////////////////////////////////////////////////////

use uo;
use basic;
use os;
include "include/attributes";


program textcmd_setprop( who, text )

	var props := SplitWords( text );
	if( !props[1] )
		SendSysMessage( who, "Syntax: .setprop [propname] [amount]" );
	elseif( !props[2] )
		SendSysMessage( who, "Syntax: .setprop [propname] [amount]" );
	endif

	var propname	 := props[1];
	var amount	 := CInt( props[2] );
	var amount_str := CStr( text - (propname + " ") );

	if( !amount )
		amount := 0;
	elseif( amount == 9999 )
		amount := 0;
		amount_str := "";
	endif

	SendSysMessage( who, "Select an object" );

	var obj := Target( who );
	if( obj )

		var value;
		var newvalue;

		value := GetObjctProp( obj, propname );
		SendSysMessage( who, propname + " was: " + value );

		if( SetObjctProp( obj, propname, amount, amount_str ) );
			newvalue := GetObjctProp( obj, propname );
			
			if( newvalue == value )
				SendSysMessage( who, "Property unchanged." );
			elseif(newvalue)
				SendSysMessage( who, propname + " now: " + newvalue );
			else
				SendSysMessage( who, "Error occured." );
			endif

		else
			SendSysMessage( who, "Could not write to " + propname + "." );
		endif

	else
		SendSysMessage(who, "canceled.");
	endif

endprogram


function GetObjctProp( obj, propname )

	var retstr := 0;
	case (propname)
		"x": 		retstr := obj.x;	break;
		"y": 		retstr := obj.y;	break;
		"z": 		retstr := obj.z;	break;
		"objtype": 	retstr := Hex(obj.objtype);	break;
		"color": 	retstr := obj.color;	break;
		"serial": 	retstr := Hex(obj.serial);	break;
		"height": 	retstr := obj.height;	break;
		"facing": 	retstr := obj.facing;	break;
		"name":		retstr := obj.name;	break;
		"desc":		retstr := obj.desc;	break;
		"warmode":	retstr := obj.warmode;	break;
		"gender":	retstr := obj.gender;	break;
		"truecolor":	retstr := obj.truecolor;	break;
		"hp":		retstr := obj.hp;	break;
		"maxhp":	retstr := GetMaxHp(obj);	break;
		"mana":		retstr := GetMana(obj);	break;
		"maxmana":	retstr := GetMaxMana(obj);	break;
		"stamina":	retstr := GetStamina(obj);	break;
		"maxstamina":	retstr := GetMaxStamina(obj);	break;
		"strength":	retstr := GetStrength(obj);	break;
		"dexterity":	retstr := GetDexterity(obj);	break;
		"intelligence":	retstr := GetIntelligence(obj);	break;
		"dead":		retstr := obj.dead;	break;
		"ar":		retstr := obj.ar;	break;
		"strength_mod":	retstr := GetStrengthMod(obj);	break;
		"intelligence_mod": retstr := GetIntelligenceMod(obj);	break;
		"dexterity_mod": retstr := GetDexterityMod(obj);	break;
		"ar_mod":	retstr := obj.ar_mod;	break;
		"graphic":	retstr := obj.graphic;	break;
		"usescript":	retstr := obj.usescript;	break;
		"equipscript":	retstr := obj.equipscript;	break;
		"unequipscript": retstr := obj.unequipscript;	break;
		"newbie":	retstr := obj.newbie;	break;
		"movable":	retstr := obj.movable;	break;
		"decayat":	retstr := obj.decayAt;	break;
		"maxhp_mod":	retstr := obj.maxhp_mod;	break;
		"quality":	retstr := obj.quality;	break;
		"ar_base":	retstr := obj.ar_base;	break;
		"hitscript":	retstr := obj.hitscript;	break;
		"dmg_mod":	retstr := obj.dmg_mod;	break;
		"skillid":	retstr := obj.skillid;	break;
		"locked":	retstr := obj.locked;	break;
		"trueobjtype":	retstr := obj.trueobjtype;	break;
		"poisoned":	retstr := obj.poisoned;	break;
		"paralyzed":	retstr := obj.paralyzed;	break;
		"hidden":	retstr := obj.hidden;	break;
		"concealed":	retstr := obj.concealed;	break;
		"frozen":	retstr := obj.frozen;	break;
		"stealthsteps":	retstr := obj.stealthsteps;	break;
		"squelched":	retstr := obj.squelched;	break;
		"lightlevel":	retstr := "Current value is unknown";	break;
		"script":	retstr := obj.script;	break;
		"controlscript": retstr := obj.controlscript;	break;
		"walkonscript":	retstr := obj.walkonscript;	break;
		"invisible":	retstr := obj.invisible;	break;
		"title_guild":	retstr := obj.title_guild;	break;
		"title_prefix":	retstr := obj.title_prefix;	break;
		"title_suffix":	retstr := obj.title_suffix;	break;
		"title_race":	retstr := obj.title_race;	break;
		"buyprice":	retstr := obj.buyprice;	break;
		"criminal":	retstr := obj.criminal;	break;
		"murderer":	retstr := obj.murderer;	break;
		"hp_regen_rate":	retstr := GetHpRegenRate( obj );	break;
		"mana_regen_rate":	retstr := GetManaRegenRate( obj );	break;
		"stamina_regen_rate":	retstr := GetStaminaRegenRate( obj );	break;
		default:
	endcase

	return CStr(retstr);

endfunction

// amount_str is only used if the value isn't really an integer
function SetObjctProp( obj, propname, amount, amount_str )

	var retstr := 1;
	var splited := SplitWords( amount_str );
	if( !amount )
		amount := 0;
	endif

	case (propname)
		"x":		MoveItemToLocation( obj, amount, obj.y, obj.z, MOVEITEM_FORCELOCATION );
				MoveCharacterToLocation( obj, amount, obj.y, obj.z, MOVECHAR_FORCELOCATION );
				break;
			
		"y":		MoveItemToLocation( obj, obj.x, amount, obj.z, MOVEITEM_FORCELOCATION );
				MoveCharacterToLocation( obj, obj.x, amount, obj.z, MOVECHAR_FORCELOCATION );
				break;
			
		"z":		MoveItemToLocation( obj, obj.x, obj.y, amount, MOVEITEM_FORCELOCATION );
				MoveCharacterToLocation( obj, obj.x, obj.y, amount, MOVECHAR_FORCELOCATION );
				break;
	
		"objtype": 	obj.objtype		:= amount;	break;
		"color": 	obj.color		:= amount;	break;
		"facing": 	obj.facing		:= amount;	break;
		"warmode":	obj.warmode		:= amount;	break;
		"gender":	obj.gender		:= amount;	break;
		"truecolor":	obj.truecolor		:= amount;	break;
		"hp":		SetHp(obj, amount);	break;
		"mana":		SetMana(obj, amount);	break;
		"stamina":	SetStamina(obj, amount);	break;
		"strength":	SetBaseStrength(obj, amount);			break;
		"dexterity":	SetBaseDexterity(obj, amount);			break;
		"intelligence":	SetBaseIntelligence(obj, amount);			break;
		"strength_mod":	SetStrengthMod(obj, amount);	break;
		"intelligence_mod": SetIntelligenceMod(obj, amount);	break;
		"dexterity_mod": SetDexterityMod(obj, amount);	break;
		"ar_mod":	obj.ar_mod		:= amount;	break;
		"graphic":	obj.graphic		:= amount;	break;
		"usescript":	obj.usescript		:= amount_str;	break;
		"equipscript":	obj.equipscript		:= amount_str;	break;
		"unequipscript": obj.unequipscript	:= amount_str;	break;
		"newbie":	obj.newbie		:= amount;	break;
		"movable":	obj.movable		:= amount;	break;
		"decayat":	obj.decayAt		:= amount;	break;
		"maxhp_mod":	obj.maxhp_mod		:= amount;	break;
		"quality":	obj.quality		:= CDbl( amount_str );	break;
		"hitscript":	obj.hitscript		:= amount_str;	break;
		"dmg_mod":	obj.dmg_mod		:= amount;	break;
		"locked":	obj.locked		:= amount;	break;
		"trueobjtype":	obj.trueobjtype		:= amount;	break;
		"poisoned":	obj.SetPoisoned(amount);		break;
		"paralyzed":	obj.setParalyzed(amount);		break;
		"hidden":	obj.hidden := amount;			break;
		"concealed":	obj.concealed := amount;		break;
		"frozen":	obj.frozen := amount;			break;
		"stealthsteps":	obj.stealthsteps := amount;		break;
		"squelched":	obj.squelch(amount);			break;
		"name":		SetName( obj, amount_str );		break;
		"lightlevel":	obj.setlightlevel( CInt(splited[1]), CInt(splited[2]) );	break;
		"script":	obj.script := amount_str;	break;
		"name":		obj.name := amount_str;	break;
		"desc":		obj.desc := amount_str;	break;
		"controlscript":	obj.controlscript := amount_str;	break;
		"walkonscript":	obj.walkonscript := amount_str;	break;
		"invisible":	obj.invisible := amount;	break;
		"title_guild":	obj.title_guild := amount_str;	break;
		"title_prefix":	obj.title_prefix := amount_str;	break;
		"title_suffix":	obj.title_suffix := amount_str;	break;
		"title_race":	obj.title_race := amount_str;	break;
		"buyprice":	obj.buyprice := amount;		break;
		"criminal":	obj.setCriminal(amount);	break;
		"murderer":	obj.setMurderer(amount);	break;
		"hp_regen_rate":	SetHpRegenRate( obj, amount );	break;
		"mana_regen_rate":	SetManaRegenRate( obj, amount );	break;
		"stamina_regen_rate":	SetStaminaRegenRate( obj, amount );	break;
		default:	retstr := 0;
	endcase

	return retstr;

endfunction